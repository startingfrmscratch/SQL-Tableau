<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0413.0938                               -->
<workbook original-version='18.1' source-build='2020.4.4 (20204.21.0413.0938)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='alt_tab_covid_analysis' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='CDATA Extract' inline='true' name='federated.0a4a0dc1ksgkuj1780jqa0x6mw2j' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='CDATA' name='hyper.0kjcpgl1jqq8n511dldhm154wdav'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/h275621/Desktop/CDATA.hyper' default-settings='yes' port='0' server='' sslmode='' username='tableau_internal_user' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation type='project'>
          <columns>
            <column caption='Latitude' hidden='true' name='[Extract].[Latitude]' />
            <column caption='Lat' hidden='true' name='[Extract].[Lat]' />
            <column name='[Project].[Lat &amp; Latitude]' project-type='coalesce' />
          </columns>
          <bindings>
            <binding expression='IF NOT ISNULL([Extract].[Latitude]) THEN [Extract].[Latitude]&#10;ELSEIF NOT ISNULL([Extract].[Lat]) THEN [Extract].[Lat]&#10;ELSE NULL&#10;END' name='[Project].[Lat &amp; Latitude]' />
          </bindings>
          <relation type='project'>
            <columns>
              <column caption='Longitude' hidden='true' name='[Extract].[Longitude]' />
              <column caption='Long' hidden='true' name='[Extract].[Long_]' />
              <column name='[Project1].[Long &amp; Longitude]' project-type='coalesce' />
            </columns>
            <bindings>
              <binding expression='IF NOT ISNULL([Extract].[Longitude]) THEN [Extract].[Longitude]&#10;ELSEIF NOT ISNULL([Extract].[Long_]) THEN [Extract].[Long_]&#10;ELSE NULL&#10;END' name='[Project1].[Long &amp; Longitude]' />
            </bindings>
            <relation type='project'>
              <columns>
                <column caption='Incidence Rate' hidden='true' name='[Extract].[Incidence_Rate]' />
                <column caption='Incident Rate' hidden='true' name='[Extract].[Incident_Rate]' />
                <column name='[Project].[Incidence Rate &amp; Incident Rate]' project-type='coalesce' />
              </columns>
              <bindings>
                <binding expression='IF NOT ISNULL([Extract].[Incidence_Rate]) THEN [Extract].[Incidence_Rate]&#10;ELSEIF NOT ISNULL([Extract].[Incident_Rate]) THEN [Extract].[Incident_Rate]&#10;ELSE NULL&#10;END' name='[Project].[Incidence Rate &amp; Incident Rate]' />
              </bindings>
              <relation type='project'>
                <columns>
                  <column caption='Case-Fatality Ratio' hidden='true' name='[Extract].[Case-Fatality_Ratio]' />
                  <column caption='Case Fatality Ratio' hidden='true' name='[Extract].[Case_Fatality_Ratio]' />
                  <column name='[Project1].[Case-Fatality Ratio &amp; Case Fatality Ratio]' project-type='coalesce' />
                </columns>
                <bindings>
                  <binding expression='IF NOT ISNULL([Extract].[Case-Fatality_Ratio]) THEN [Extract].[Case-Fatality_Ratio]&#10;ELSEIF NOT ISNULL([Extract].[Case_Fatality_Ratio]) THEN [Extract].[Case_Fatality_Ratio]&#10;ELSE NULL&#10;END' name='[Project1].[Case-Fatality Ratio &amp; Case Fatality Ratio]' />
                </bindings>
                <relation connection='hyper.0kjcpgl1jqq8n511dldhm154wdav' name='Extract' table='[Extract].[Extract]' type='table' />
              </relation>
            </relation>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='project'>
          <columns>
            <column caption='Latitude' hidden='true' name='[Extract].[Latitude]' />
            <column caption='Lat' hidden='true' name='[Extract].[Lat]' />
            <column name='[Project].[Lat &amp; Latitude]' project-type='coalesce' />
          </columns>
          <bindings>
            <binding expression='IF NOT ISNULL([Extract].[Latitude]) THEN [Extract].[Latitude]&#10;ELSEIF NOT ISNULL([Extract].[Lat]) THEN [Extract].[Lat]&#10;ELSE NULL&#10;END' name='[Project].[Lat &amp; Latitude]' />
          </bindings>
          <relation type='project'>
            <columns>
              <column caption='Longitude' hidden='true' name='[Extract].[Longitude]' />
              <column caption='Long' hidden='true' name='[Extract].[Long_]' />
              <column name='[Project1].[Long &amp; Longitude]' project-type='coalesce' />
            </columns>
            <bindings>
              <binding expression='IF NOT ISNULL([Extract].[Longitude]) THEN [Extract].[Longitude]&#10;ELSEIF NOT ISNULL([Extract].[Long_]) THEN [Extract].[Long_]&#10;ELSE NULL&#10;END' name='[Project1].[Long &amp; Longitude]' />
            </bindings>
            <relation type='project'>
              <columns>
                <column caption='Incidence Rate' hidden='true' name='[Extract].[Incidence_Rate]' />
                <column caption='Incident Rate' hidden='true' name='[Extract].[Incident_Rate]' />
                <column name='[Project].[Incidence Rate &amp; Incident Rate]' project-type='coalesce' />
              </columns>
              <bindings>
                <binding expression='IF NOT ISNULL([Extract].[Incidence_Rate]) THEN [Extract].[Incidence_Rate]&#10;ELSEIF NOT ISNULL([Extract].[Incident_Rate]) THEN [Extract].[Incident_Rate]&#10;ELSE NULL&#10;END' name='[Project].[Incidence Rate &amp; Incident Rate]' />
              </bindings>
              <relation type='project'>
                <columns>
                  <column caption='Case-Fatality Ratio' hidden='true' name='[Extract].[Case-Fatality_Ratio]' />
                  <column caption='Case Fatality Ratio' hidden='true' name='[Extract].[Case_Fatality_Ratio]' />
                  <column name='[Project1].[Case-Fatality Ratio &amp; Case Fatality Ratio]' project-type='coalesce' />
                </columns>
                <bindings>
                  <binding expression='IF NOT ISNULL([Extract].[Case-Fatality_Ratio]) THEN [Extract].[Case-Fatality_Ratio]&#10;ELSEIF NOT ISNULL([Extract].[Case_Fatality_Ratio]) THEN [Extract].[Case_Fatality_Ratio]&#10;ELSE NULL&#10;END' name='[Project1].[Case-Fatality Ratio &amp; Case Fatality Ratio]' />
                </bindings>
                <relation connection='hyper.0kjcpgl1jqq8n511dldhm154wdav' name='Extract' table='[Extract].[Extract]' type='table' />
              </relation>
            </relation>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Province_State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Province_State]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Province_State</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1573</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country_Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country_Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country_Region</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>433</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Update</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Last Update]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Last Update</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>10460</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>82998</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>16358</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>93941</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>6</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>841</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Active Cases]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Active Cases</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>68036</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lat &amp; Latitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Lat &amp; Latitude]</local-name>
            <parent-name>[Project]</parent-name>
            <remote-alias>Lat &amp; Latitude</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Long &amp; Longitude</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Long &amp; Longitude]</local-name>
            <parent-name>[Project1]</parent-name>
            <remote-alias>Long &amp; Longitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Admin2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Admin2]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Admin2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>4599</approx-count>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Incidence Rate &amp; Incident Rate</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Incidence Rate &amp; Incident Rate]</local-name>
            <parent-name>[Project]</parent-name>
            <remote-alias>Incidence Rate &amp; Incident Rate</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Case-Fatality Ratio &amp; Case Fatality Ratio</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Case-Fatality Ratio &amp; Case Fatality Ratio]</local-name>
            <parent-name>[Project1]</parent-name>
            <remote-alias>Case-Fatality Ratio &amp; Case Fatality Ratio</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' datatype-customized='true' name='[Active Cases]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country Region (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country_Region]' new-bin='true'>
          <bin default-name='false' value='&quot;China&quot;'>
            <value>&quot;China&quot;</value>
            <value>&quot;Mainland China&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Korea&quot;'>
            <value>&quot;Korea, South&quot;</value>
            <value>&quot;South Korea&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
          <semantic-value key='&quot;North Ireland&quot;' value='&quot;Ireland&quot;' />
        </semantic-values>
      </column>
      <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
      <column caption='Province State' datatype='string' name='[Province_State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country Region (group))' hidden='true' name='[Action (Country Region (group))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Region (group)]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Region (group),DAY(Date))' hidden='true' name='[Action (Country Region (group),DAY(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Region (group)]' />
          <groupfilter function='level-members' level='[tdy:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Region (group),MONTH(Date),DAY(Date))' hidden='true' name='[Action (Country Region (group),MONTH(Date),DAY(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Region (group)]' />
          <groupfilter function='level-members' level='[tmn:Date:ok]' />
          <groupfilter function='level-members' level='[tdy:Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Set1' name='[Set1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Active Cases])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Country_Region]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Country_Region, Province_State'>
          <field>[Country_Region]</field>
          <field>[Province_State]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/h275621/Documents/My Tableau Repository/Datasources/CDATA Extract.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='11/18/2021 06:43:50 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='CDATA Extract' increment-value='%null%' refresh-type='create' rows-inserted='2364602' timestamp-start='2021-11-18 18:43:50.485' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Province_State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Province_State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Province_State</remote-alias>
              <ordinal>0</ordinal>
              <family>Extract</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1599</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country_Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country_Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country_Region</remote-alias>
              <ordinal>1</ordinal>
              <family>Extract</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>418</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Last Update</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Last Update]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Last Update</remote-alias>
              <ordinal>2</ordinal>
              <family>Extract</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9637</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Confirmed</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Confirmed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Confirmed</remote-alias>
              <ordinal>3</ordinal>
              <family>Extract</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>80419</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Deaths</remote-alias>
              <ordinal>4</ordinal>
              <family>Extract</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>17749</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Recovered</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Recovered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Recovered</remote-alias>
              <ordinal>5</ordinal>
              <family>Extract</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>101159</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Date</remote-alias>
              <ordinal>6</ordinal>
              <family>Extract</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>867</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Active Cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Active Cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Active Cases</remote-alias>
              <ordinal>7</ordinal>
              <family>Extract</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>67571</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lat &amp; Latitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Lat &amp; Latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lat &amp; Latitude</remote-alias>
              <ordinal>8</ordinal>
              <family>Project</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12295</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Long &amp; Longitude</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Long &amp; Longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Long &amp; Longitude</remote-alias>
              <ordinal>9</ordinal>
              <family>Project1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>13287</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Admin2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Admin2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Admin2</remote-alias>
              <ordinal>10</ordinal>
              <family>Extract</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4814</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Incidence Rate &amp; Incident Rate</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Incidence Rate &amp; Incident Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Incidence Rate &amp; Incident Rate</remote-alias>
              <ordinal>11</ordinal>
              <family>Project</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1226688</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Case-Fatality Ratio &amp; Case Fatality Ratio</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Case-Fatality Ratio &amp; Case Fatality Ratio]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Case-Fatality Ratio &amp; Case Fatality Ratio</remote-alias>
              <ordinal>12</ordinal>
              <family>Project1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>303789</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Country Region (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MS Zaandam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Taipei and environs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St. Martin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;The Bahamas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran (Islamic Republic of)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Others&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Diamond Princess&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia, The&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Republic of Moldova&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ivory Coast&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas, The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Republic of Ireland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Republic of the Congo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Gambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;occupied Palestinian territory&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Macao SAR&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Summer Olympics 2020&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hong Kong SAR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Republic of Korea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vatican City&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Extract' id='Extract (Extract.Extract)_313DDD5F8DA94858BE40E052B8AC57A8'>
            <properties context=''>
              <relation type='project'>
                <columns>
                  <column caption='Latitude' hidden='true' name='[Extract].[Latitude]' />
                  <column caption='Lat' hidden='true' name='[Extract].[Lat]' />
                  <column name='[Project].[Lat &amp; Latitude]' project-type='coalesce' />
                </columns>
                <bindings>
                  <binding expression='IF NOT ISNULL([Extract].[Latitude]) THEN [Extract].[Latitude]&#10;ELSEIF NOT ISNULL([Extract].[Lat]) THEN [Extract].[Lat]&#10;ELSE NULL&#10;END' name='[Project].[Lat &amp; Latitude]' />
                </bindings>
                <relation type='project'>
                  <columns>
                    <column caption='Longitude' hidden='true' name='[Extract].[Longitude]' />
                    <column caption='Long' hidden='true' name='[Extract].[Long_]' />
                    <column name='[Project1].[Long &amp; Longitude]' project-type='coalesce' />
                  </columns>
                  <bindings>
                    <binding expression='IF NOT ISNULL([Extract].[Longitude]) THEN [Extract].[Longitude]&#10;ELSEIF NOT ISNULL([Extract].[Long_]) THEN [Extract].[Long_]&#10;ELSE NULL&#10;END' name='[Project1].[Long &amp; Longitude]' />
                  </bindings>
                  <relation type='project'>
                    <columns>
                      <column caption='Incidence Rate' hidden='true' name='[Extract].[Incidence_Rate]' />
                      <column caption='Incident Rate' hidden='true' name='[Extract].[Incident_Rate]' />
                      <column name='[Project].[Incidence Rate &amp; Incident Rate]' project-type='coalesce' />
                    </columns>
                    <bindings>
                      <binding expression='IF NOT ISNULL([Extract].[Incidence_Rate]) THEN [Extract].[Incidence_Rate]&#10;ELSEIF NOT ISNULL([Extract].[Incident_Rate]) THEN [Extract].[Incident_Rate]&#10;ELSE NULL&#10;END' name='[Project].[Incidence Rate &amp; Incident Rate]' />
                    </bindings>
                    <relation type='project'>
                      <columns>
                        <column caption='Case-Fatality Ratio' hidden='true' name='[Extract].[Case-Fatality_Ratio]' />
                        <column caption='Case Fatality Ratio' hidden='true' name='[Extract].[Case_Fatality_Ratio]' />
                        <column name='[Project1].[Case-Fatality Ratio &amp; Case Fatality Ratio]' project-type='coalesce' />
                      </columns>
                      <bindings>
                        <binding expression='IF NOT ISNULL([Extract].[Case-Fatality_Ratio]) THEN [Extract].[Case-Fatality_Ratio]&#10;ELSEIF NOT ISNULL([Extract].[Case_Fatality_Ratio]) THEN [Extract].[Case_Fatality_Ratio]&#10;ELSE NULL&#10;END' name='[Project1].[Case-Fatality Ratio &amp; Case Fatality Ratio]' />
                      </bindings>
                      <relation connection='hyper.0kjcpgl1jqq8n511dldhm154wdav' name='Extract' table='[Extract].[Extract]' type='table' />
                    </relation>
                  </relation>
                </relation>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sheet 3' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Map</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CDATA Extract' name='federated.0a4a0dc1ksgkuj1780jqa0x6mw2j' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0a4a0dc1ksgkuj1780jqa0x6mw2j'>
            <column datatype='integer' datatype-customized='true' name='[Active Cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Region (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country_Region]' new-bin='true'>
                <bin default-name='false' value='&quot;China&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Mainland China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Korea&quot;'>
                  <value>&quot;Korea, South&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;North Ireland&quot;' value='&quot;Ireland&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Active Cases]' derivation='Sum' name='[sum:Active Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Latitude (generated)]</column>
            <column>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Longitude (generated)]' field-type='quantitative' max='17223665.905256316' min='-17223665.905256316' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Latitude (generated)]' field-type='quantitative' max='10373846.725426584' min='-3857914.8508686218' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country_Region]' value='false' />
            <format attr='break-on-special' field='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country_Region]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country_Region]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]' />
              <size column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[sum:Active Cases:qk]' />
              <lod column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Latitude (generated)]</rows>
        <cols>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[twk:Date:ok]</column>
        </pages>
        <page-trail-options lines='true' mark-type='all' marks='false' />
      </table>
      <simple-id uuid='{96A1BD67-7A24-4DE3-8DFB-D42AEB54AC34}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Active Cases vs Locations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CDATA Extract' name='federated.0a4a0dc1ksgkuj1780jqa0x6mw2j' />
          </datasources>
          <datasource-dependencies datasource='federated.0a4a0dc1ksgkuj1780jqa0x6mw2j'>
            <column datatype='integer' datatype-customized='true' name='[Active Cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Region (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country_Region]' new-bin='true'>
                <bin default-name='false' value='&quot;China&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Mainland China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Korea&quot;'>
                  <value>&quot;Korea, South&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;North Ireland&quot;' value='&quot;Ireland&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Country_Region]' derivation='None' name='[none:Country_Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active Cases]' derivation='Sum' name='[sum:Active Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[none:Country_Region:nk]'>
            <groupfilter function='level-members' level='[none:Country_Region:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[sum:Active Cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[none:Country_Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[sum:Active Cases:qk]' field-type='quantitative' max='400000000' min='0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]' />
              <lod column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[sum:Active Cases:qk]' />
              <text column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[sum:Active Cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='342' />
                <format attr='maxwidth' value='342' />
                <format attr='minheight' value='4900' />
                <format attr='maxheight' value='4900' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]</rows>
        <cols>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[sum:Active Cases:qk]</cols>
        <pages>
          <column>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[twk:Date:ok]</column>
        </pages>
        <page-trail-options mark-type='all' />
      </table>
      <simple-id uuid='{BFDDCB7A-5C7D-4553-B586-D94A06B759AC}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Active Cases Trend Line per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CDATA Extract' name='federated.0a4a0dc1ksgkuj1780jqa0x6mw2j' />
          </datasources>
          <datasource-dependencies datasource='federated.0a4a0dc1ksgkuj1780jqa0x6mw2j'>
            <column datatype='integer' datatype-customized='true' name='[Active Cases]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country Region (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country_Region]' new-bin='true'>
                <bin default-name='false' value='&quot;China&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Mainland China&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Korea&quot;'>
                  <value>&quot;Korea, South&quot;</value>
                  <value>&quot;South Korea&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Country Region' datatype='string' name='[Country_Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Mainland China&quot;' value='&quot;China&quot;' />
                <semantic-value key='&quot;North Ireland&quot;' value='&quot;Ireland&quot;' />
              </semantic-values>
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Active Cases]' derivation='Sum' name='[sum:Active Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Week-Trunc' name='[twk:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]'>
            <groupfilter function='level-members' level='[Country Region (group)]' />
          </filter>
          <filter class='categorical' column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Set1]' />
          <slices>
            <column>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Set1]</column>
            <column>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[sum:Active Cases:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]' />
              <text column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]' />
              <lod column='[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[sum:Active Cases:qk]</rows>
        <cols>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[tdy:Date:qk]</cols>
        <pages>
          <column>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[twk:Date:ok]</column>
        </pages>
        <page-trail-options enabled='true' end='43' mark-type='all' start='0' />
      </table>
      <simple-id uuid='{8AD1BED8-2A22-43C1-AFDC-9A51410A2FC5}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='85485' id='26' param='horz' w='98622' x='689' y='13164'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='85485' id='8' param='horz' w='98622' x='689' y='13164'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='85485' id='6' w='98622' x='689' y='13164'>
                <zone h='53382' id='3' name='Sheet 1' w='58310' x='689' y='13164'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='85485' id='5' name='Sheet 2' w='40312' x='58999' y='13164'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='32103' id='24' name='Sheet 3' w='58310' x='689' y='66546'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='11813' id='32' w='64686' x='689' y='1351'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='8'>Æ </run>
              <run fontalignment='1'>Æ&#10;</run>
              <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='16'>Time Lapse to show Active Covid Cases</run>
              <run fontalignment='1'>Æ&#10;</run>
              <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='8'>Æ </run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#000000' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='2' h='11813' id='27' name='Sheet 3' name1='Sheet 1' name2='Sheet 2' synchronized='1' w='33936' x='65375' y='1351'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='46' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97298' id='45' param='vert' w='98622' x='689' y='1351'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='11813' id='32' w='64686' x='689' y='1351'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='8'>Æ </run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='16'>Time Lapse to show Active Covid Cases</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='8'>Æ </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#000000' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='53382' id='3' is-fixed='true' name='Sheet 1' w='58310' x='689' y='13164'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='85485' id='5' is-fixed='true' name='Sheet 2' w='40312' x='58999' y='13164'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='249' h='32103' id='24' is-fixed='true' name='Sheet 3' w='58310' x='689' y='66546'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='currpage' _.fcp.SetMembershipControl.true...type-v2='currpage' count='2' h='11813' id='27' name='Sheet 3' name1='Sheet 1' name2='Sheet 2' synchronized='1' w='33936' x='65375' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{876B056B-6792-4459-A1B9-1B6AA249B423}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-11-14 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]</field>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[none:Active Cases:ok]</field>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[none:Lat &amp; Latitude:nk]</field>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[none:Long &amp; Longitude:nk]</field>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3331B53-1509-4286-930A-2B97E5B7F783}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-11-14 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]</field>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[none:Country_Region:nk]</field>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[none:Date:qk]</field>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[twk:Date:ok]</field>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{49FFFD91-10C1-4284-A4C8-311AFA6FF2A3}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2021-11-14 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Country Region (group)]</field>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[Set1]</field>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[none:Country_Region:nk]</field>
            <field>[federated.0a4a0dc1ksgkuj1780jqa0x6mw2j].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3FF8B695-84F3-426F-9AC7-90812CA22E02}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <current-page>
            <multibucket>
              <bucket>#2021-11-14 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 2'>
          <current-page>
            <multibucket>
              <bucket>#2021-11-14 00:00:00#</bucket>
            </multibucket>
          </current-page>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <current-page>
            <multibucket>
              <bucket>#2021-11-14 00:00:00#</bucket>
            </multibucket>
          </current-page>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DC11AE61-409B-4C1B-9CB5-831B86BAEA85}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      7usAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29W48s2ZUe9sU98hJ5rVPnfrrJZl/I5vRMD4cXcTTSSKAeLMuWDOjNgCBA
      P0DQg170Jv8CWy+CIMAvejFgw7ZkGIZt0aMRhiZgSkONyBmRzb5wyNN9zqk6lffIyLhuP0R9
      u3ZERlZl1cmqyqqTH9B96pIZFbljr7XX5VtraYPBQNi2jdcdaZpCCAHTNLFYLJAkCTRNg23b
      iOO48FohxNLXmqZB07Sl61qWBcuyIISApmmIoghJklzuh1kBTdPgui4Wi0XhMxC6rsN13Wu4
      s+uDads2Go3Gdd/HtUEIgTiOkWUZsixDrVaDaZrIsgxCCOi6jizLCq9X/wVWb37DMOB5HgBg
      Op3CcRzUajXM5/NL/lTVqNVqSNMUuq4v/U7XdTQaDViWdQ13drkQQkAIIRWPbdtIkgSGYcC8
      5nvbCsznc7k4QghYloXpdCpPBC4g0Wg0oOt64aQowzAMNJtNaJoG3/eRpimCIKh87VVA0zRk
      WYYoiip/73keDMO44rvaLPiM4jiGruswzZPtHQSB/D2FXAixE4A0TaVGEEIgiiLUajXU63UI
      IeD7vjSF0jRFrVaDruuYzWbIsmzlhm40GjAMA2EYyk1XFqSrhBACYRgWflav1+VpUHUq3CSE
      YSg3fRRFEELI0xfIN72mabAsC1EUYTaboV6vv94CwGNxsVjIjTybzZCmKVzXhWmaaLVaAHIN
      ylMiDENp01fBsiwYhoE0TeH7/tV8mAuAAuw4zrX8XZ5KmxA+0zTlqWyapvxMVDq2bUsFx89s
      WdbrLQBA0YkF8oeTJAnCMITjOJjP59KRDYJgpclDmKaJRqNREJhthK7rZ36WywA3YZZlcF23
      oLnLJhg37zoCYhiGfH2tVpPvT9NU+nSLxQK6rsvND+D1EwAhBIIgkCYONRC1kmEY0ilmBCiK
      IliWBcdxkKbpqdc3DEM+MEbXhBDX5vhWwbZtaQ5cVQSQiiZNU7kWaZpK05MRKm5e4jwCqmla
      YfNrmib9AF6/fL2bbfhdEGqorxyW1DQNuq4XwqIApFBUOYqWZaHZbMIwjEIUhUfttoWZTdNE
      kiSF6NamQYeb5mKSJJjNZnKT1mq1gk9UZVKuiq6dBr6+6lq6ri9d87UTAC4EcBL64/FZfl2a
      pmg0GnIDLxaLyhOAwtFqtbZus1chDEN4nneptn8cx5jNZgAgFUwcx1IAyiaibdtX7osAr4EJ
      RDtQ1/VKW9I0Tdi2DcMwEAQB0jSVGsL3fRiGAdd1pd0KnERMarWadK4Mw6jUVkIILBaLS/yE
      5we14GXa/zwpGfqlXzSdTtFqtWCaJur1ukwyUiiuGrdeANI0xWQygW3bhbAfoes66vW6dJC4
      yTVNkw6VavaoDymOY6nxyw+Pgpem6dYJwFXAMAxpagGQoeAsyxDHcR6BOY7WXFduBHgNTCDD
      MNBoNBCGIcbjsTRhyvZnEATyiOYDYVZYCIF6vb507SRJEEVRZfRiNpthPB5vXRiU2emr2HTq
      upB+wbVhrP46Nz9wywSAEQbVuWMSi4ms6XQqQ53qQ6jX64WHwbDcaDTCZDJBGIaVZgNDo8BJ
      iG88Hi8lnbYFTAhdBXjaMi9CXLfWV3FrBCBNU8xmM+mQEtTuDHMyupNlGXzflxqafgCQb/5m
      syk3PaNCVTBNU0aKFosFptPptcTX1wXv6yoy0lxTy7JQr9dlhMxxHKksrhu3xgcwDAOtVmsp
      s0jtTqGYzWYIwxC1Wq0QCtR1He12G0mSwDRNeXI4jrPShue1CTrQ27r5rxJcB8/zkGUZZrOZ
      XFvmSnzfh67r10rAuxUnwGKxQBzHGI1GCIKg8jUUCjrCTJKooTcmh+gAM1FUpS1t24bnefJa
      ACRPaJtB+sFVgGvBcGg5Fs9T+Kzk4qXe47X95Q3CdV1kWSYXUtXA6sNmyp2JMG5+Nb5PRy1N
      U4xGI5lK5+8Ihj7VDc9TyLZt6Lounehtw2w2uzJSHk9WholVbb8qdHyV2L6nswa4QZMkkQ6W
      ZVmVfHbyvldRfcsafrFYwHEceU3f9yVblCZPHMcrkzZMrqnJn23CfD6vDAdfJqIoQhzHMqdC
      NBqNtbk+l4UbJwBCCOloktgEQGrcMliNtepajAJRE/EBRVEkHWaVx7NYLGDbtvQTyojjGPP5
      /FqP9bPA+7uqQijbthGGYWHNVlEWrho3TgCoTXRdlxuYER5qEpVuW3ZK1dgzk2TMSqq8H/JW
      VHsVQMFxriRX6bqkVlyVrb0uaII4jnOl90b6wzayY2+MAHCzB0GwVLuqHqNMtJDjA5xwUAzD
      kAJEB9dxHIRhCN/3pTlF0hvLIg3DkLFrCsCqeLqaeNsmBihwYp4BV6951XDxNmH77ugUTCYT
      WZVFLTadTgFAanAKStlh5REM5GYM6c4sfGHpoqZpaLVaqNVqMmGmbnYK01kPkxlivpdcJLVC
      7KrBAh0mBq8S123qlMFa8BslAI1GQ25cHuHckCrJStM0BEEgozGmaSIMwwIvh+9XHeQ4jgtO
      q67rBU4/gJW2vwpN09BsNuXX6r/UhNd1OlD4rjIjvG1gfXYURTcnDKrarySZqRnXLMskDYJO
      13Q6zT/kMeGNsX2+HoC8FgBJhqOTyE4Ri8VCZo3X1d7U+GUfhIUZ19mJgxSQ1xFJkmAymcjn
      eKNOAIIlbpPJBMAJczOKIoxGo8JraXbYto1ms4ksyzAYDKQgkMvTbrelUNBPUIWLoEC9avby
      OjswqNSObU/cbRJJksD3fekz1mq1mykAwImZEccxTNOUD3Q2mxUysuV4Pbnp3IB0dMvMxNM6
      OGzCmTMMA/V6/cpNIdU821RB+k0AiZB8po1GIzdHr/m+Lgw6ouSck9TmeZ6seV31PjVf0Gg0
      pF/gOA50XZedA+gPMLTJpNqm7t9xnCW/47KRZRmCIJA9i14ncPPbtn2ziuLjOEYYhkiSRFZh
      EQxvdjqdQi5gXTBsSajJtXLHiHLS7KaC1W03vRHWulCr8ti1g7gRAsDePUDeYpAmSLPZlFGZ
      8zxMhsAYCWHZHquYTius3iTo2F/FCUBhdl1XUj1eF7D2A8CSdXAjDEDG94kkSST//7SMJh1j
      tfJrNpthOp3KnAJDYvP5XEaNgBNTYT6fS+4Raw0YIdpEJOUqNqIaBVNbBL4OIBWb/k7ZJ7wR
      J0Acx5Xlc6RDVDlz3KDz+bzQ95LZXDIR1b40rAEA8oL4OI5lVpfRg2azKRNmbO/xKrgKc4qf
      jz1NtzEje1mgWZxl2VLVH3ADToCqnpYMYbGJLU8ENQvMeC9fT0FhPxrgJCPM95DuwMJtmkTc
      /EDeUsSyLOi6vlR9dhGQ1nHZgkAK9GkBgtsGtda73LOJ2HpVQNNDBVtosNCCza3IdVksFnBd
      t/DA1eOfmzwMQ6kVO52OPEXob1SZJ2maotVqIU1TaV69SnE3T6nLdK7Je9pGMtplQnV+q7Q/
      cANOANrkvHlmg1WhCMNQ8nZY8shkBx86TZZyVpZOr/pz5hQoVKogmKYpfYMoiqQvcVFcRUkg
      cyXX1XvnuqD6aauig1svAGxMCxRj+GVtRtoCNyNj+SrVgSFPUhRo8qzqUsD2fqz1pdlDXhFf
      s4m+P5e5MekIvk4QQmAymSztizJuhAC0221YlgXXdaXzykZXNG/KYJc3oCgsrOpqNpuo1+uI
      oqjQ2gQoaoswDAudh1Xw+ziOCxGj84D9R5mZvAyQOsKT8XWB2tRsVah56wUAyDdkq9WSFAYK
      ALV8VeELUbVxeaqQ+Eb/gKjVavKkUJvnrqJH8P2reoee9dnYMoQNdjcNboSL3N9VQS1u2gRI
      OmTXjlWffWud4LJjWbbhaL+TdUkNV7WAi8Wi0JypfF1GfdI0lQLm+/6FHobv+3BdV0aK1v2s
      QRDI91xGX6FarbZ1zboYraOZSvoJT/tX5SnRvPU8T7a5X2q/PpvNxCapufP5XPbdqQq5nfVg
      1RAluTmnvZYLCOR2v0pXVs0jNW6v3sN4PJbHY6PRkAvEZJc6P4x/k2bUqhYsQB51WLcDWpIk
      UgC5STclAKxfVp/FdTrC6gnKqjm1I0eSJHAcB81m81JCtqTR89obPwGoTWmeqF0XaOdWbWo6
      k2maym4MAGQ4k/+prTQWi0VhE5Y1drkqjA4Ryx2Bk175aq0AcFIo02q15O9pr0dRJHsK0QEu
      P6j5fL52GSAFjSbeJhmiVApBEMDzvGtPgrEXEDe7WnPB/qGdTgez2Qye5228cIeBDACXMyVS
      tePKVITZbAbLsuB5nrTNoiiSm4izumiX+74vzQFqSNp1TGszUlNlrpAmrdb1UviYIGm1WrAs
      C5PJRFKp1XQ5u1AIIWQjLNYjq/mEMlFuVTv2KlBDXxaYH7nuzR/HsQwbJ0mCJEmkgguCAJ1O
      B0IIPHv2TOZaOMdg3bWsKmNVwdN7PB7nimzTH5JQO6bRFCGnht3AHMfBZDIpcHXKnB/VHtY0
      DYvFAmEYSseRY3XUzs8kmXFxmfFlXJimBheLixvHMWq1mrTjedrQLp9Op4WEGTc5B+Kp5tZ5
      jm+Vo08tuCmtx35J18n7VxUh1+nTTz9Fr9dbep2as0jTFOPxWK7nOicYgxZsh6MqJv59Xi8M
      w8sRAFUTrtrcPPKqfsdrqO9Vr0etzL/jeZ4sYgcgI0TsPdlsNiUdgs5zs9mU5hNPCNriPCLr
      9XqBK0QnVd2c1E6kaxNsnlV+/ar1UvtnbmLz00TbBuoDlV6WZRiPx8iyDA8ePJChYwCSrDef
      z9HtdgEs+wvMwqvanSewaZoyScoTPAxDOQ2HM53pn/LZb1wAuClVM4j/qrwbvnZdlO15/stm
      q4zwqJucSSu2Q1Rfo+YJaA5xzCZRbqFedmr5YNmRgqYSP/tkMkGr1VpLCIDTKRjrgG1eSO2+
      7o0PnDwP13Xx7NkzOUAcyCNTg8EA3W5XKqh6vS4bHJSDGEmSYDgcSoXHvUYh4okSx3HBIojj
      uKCc2EkEuAQBKPsA6r/8umozV11HndhSdR0KGjU9bUtVKwN5aJJdIgg18sA63/Lm5jV4z+wK
      p2ofCo6am1DvcTwew7ZtOSJoFVQ/5rz1DcBJlnsbNr0K3s94PJZloOozdRwHURQVJlcy0FBV
      mMQML6N63Cccis3mBWVTehUuxQSq2vj8fp3Nf9rvudn4odTQIVEVnlQpC6pmKVME+MDYHe60
      XIBlWVJ7qfdb3oSMiNHxr9qkr0pUW6ddy3WAioO5mPJ6qtYCXx/HcWGtqvaByvFSr1Pe/Op1
      q9bnUgWgCud5SKpGpGNkmiYWi4Xs8sa/dxFzatXi8ndMjDE0Wx4tRE0thJD2ZjkSxM9Ap5vH
      fxnnSZxV3avaKe88uIg5eh4kSSJzKbVaDbphIAOA4xNYzegTXAdqeZXuTpTN7MFgIL9W9436
      Ocuf9VLyAJvimvBDqMOcmUNwXVfSkfk313mA5QWp+l15kdrtdqEGYNW9Mm/BhWboMY5jefKc
      5ZDSDj6PINi2vTTIb9U9sj0MNw99Id7rpoWA159OpzLHskhTHMxneNJsVW5U1ZRk20q2V1ej
      gpqmYTgcSmuA11plMpfvi9gqKgQ1srowLFlkWItpc1aJnff6VV+roCPG6fAMk562KVllVR6y
      Rw1WHrpdBQr3Olwd5jQAyO53p0E1Q9RwJIWAOZVN07LZiY/VWABQMwy82eogjmO4rotOp4Mw
      DGX4V71nAJLJSXoJkJ+mg8FgKcSpfr0urkUAqm6Utr3q3KpgUktdVL5vXZTDqbyXMlgkT03E
      Zrjla7HKinZr+bqLxQKNRkM+/NO0tGEYqNVqMpJ0mjZW522tA0awdF0/qZLLNOiaBpi6HC7Y
      brfXvuY6oLCpz1I1ZWq1GlzXlcU6XMM0TQsBC+ZrqER4UgKrw+xngde4thNATVLwe/XmaD9z
      AVk1pW6w0zZJ1XXVv1mVY1BfxwQYTYc4jmVqnq9Rk2jliBVwsgHWTUStk6mlP3ReqKFRTdMg
      Fglg6NAtc2lwxSbApgU8vQn1+XETlsOUNHfUU58Kh/6YiouY3ZIKc5EP96qoklo+mHIGWXV0
      zmMfn6ZFT4tOcTPQVqZJYlmW5OtQC7Xb7ULeYzgcLn0mPtx1qA7MKp8WeTpL8E+7NgBpqul1
      UwpTvV7fKA1bCCH7qAZBsNSJQdXknO2m7gnHcTAejyUxkT6U67qSwrApXEoiTN2kq0Ki6s+4
      gdToySawTrSnDJUxyiJ6RjB4DPPa5YhPu92WVUicW3aewnl2oz7tAb+Kna5pmpyEqRL6NuX8
      UpuTpDibzdDpdAq/B3K/hRM9ufnVE1tdY0bZ5vN5wfTdFC71BDhr03Fjlk8Etc2J6hiqJwNf
      W9aY7B7NBNU690EwCaNuanXI9lktRZjoYYVZs9k8l7ai07yyekmvHgN1nuvTt9k0+Y4JRSoA
      PseqCA9PztFoJF/jxhEADYtjmoPneZIRSmx68wOXXBGm2txVkRQ+EPW/Ml3iLFiWJTU2/+X7
      z3Md0zTRbreXNgbvixEe9ZqkbzMDDeQCyAfs+36Bm7LufZDEV/VZr5LUtu76qZtf1eble+Up
      qTYmPrmI/J8Mn6qs28vCpZHhgBPHkHb9aZyYqowg/y2bMOrXNFPYYlDl0lO7rLOAJMytAjWv
      +rfn87mMBDGWTiFstVrnjkwQrutW1u9uY6YXKFLGDV1HHAbQrVzo1dNc5Wypz0UIgYUyiIT5
      CrWW5LzhzXWxcXVSRRVWzRrO1j0tS8fvGauusg8BFFp9BEFQSYHg3z5t8dRuwWdBfXDl65an
      Q5b9oXXB06x8il01n/8iDneWpXj20U9kbkElF552LfWZR1GE/f19af5cxsYnLmVFedQxiUUO
      NjN5FAJ1s1TFdYnyycDfkfVXlTco47So0EUow2WhJYbDoSyqvygYt6fyYCvGy+4fdFGoikBA
      w6Ovf1OahOo90/kmJ6jsH7Bw3/M8WS+ihsMvAxsXADqOAKT9y6wtQ4mj0UhyvjmJfZWJcxrU
      JIumaTCPj9dkRTa1asMCuJBDqEZsykJbFmwOpz6PkHHDCyEkg3JbTSA1E64qonL4l1GfdrsN
      0zTRarUwm81k20LDMNBut+H7vuTvX4bjq2LjAuC67pLzQieQFfr1eh2Hh4fyZCgnitSM8FnC
      oJoH8x/+DNA01L7z7hK7spz84s8uuqmYnSzfh/q9SuVwHOfCCayrnui4CqtOUeYTyhGvqoEi
      NDf5vFmsEkcLxJqO4XAkBf8q2sZfSh7gtN/RQQQgs7vD4RDtdntJCAAsmUqrIISAdacNoBip
      Oe2e+BoWtZzHxFhVh8zfsbSPHBcWpV8E16351ZO2KmFG84Vfs5EAiXZ8Hixr5HNmlj0IAoyf
      /QC19lvQ9c5Kpade6zScx2G+Ni5Qq9WC67rwfR/tdhvz+XwlVbiKZlBGkiQwvnwXQohKrvgq
      CHHSQJVVSOuA5l1Vr500TTEajaTwssEWheK6N/S64FpGUYQwDGXRetX9u64rTR6e+KzP5WZk
      MwP1dGfXOqP5PoThIE3SMwMHVTSXqt+Xf1a1h66tUprHZpIk0mFUE15nfcgqMGpU/jtngQ/6
      PM6Wpp0UuKjXUZNAake5m9yfk/1R1QYGZbB7HwWB2fDy69VKPNb5OpaJmlvHYDBamThUlZn6
      X/ke1BOq7PNV7YVrbY3I2DmQa5DRaLQx7Xje68RxjMFggJcvXxamCZ4GRrOIqvdcJCm3TeAp
      VpXZLYObmgXwah02cJIHoDaWs5fnPrQ4xP7+fuUarfLVyj9XE6+nvU/9bNdaD0AtulgsYJom
      ut0uXr58iX6/v5QII8ob7rRNtSrqswrqqNUwDJc6EKjXLWecT4MaHQrDcOPMy8sCNxBN0LMI
      c0IIxFMfxnSB5NgMYqsZVvNxLYMgwGg0QpqmaLfbiJIMOOYQJUkifbKqTayueVVyVc2/rMoh
      SXbCK6zPRqBpmmRfMjpwWk7gPCFSXn9dqBuaJ8J0Ol2aCcbNz9+tq92FOKH03gSwGIVZcJZ9
      roKmaYBjI23nE284qMTzvMopOK7rorvXwWfJz2E7Ng4PD7G/v496vS5zH1XPr7wfVKqNmmgt
      M4uX7hXYfG/Qi4AbTgiBFy9ewHGcQuThLHChqgSm/Jqz7kN9bzkq1e12ZfHGZDI51V4t34P6
      M2ZJt6Fb2ypkWYaPP/4YnufJEbSM2ZcjdiomkwkODg7w+PFjuSn5Wtb2apqG8Xgsa4VbXQ9H
      hwO0vJY8ZWazmXSaVVBBqvkf9dmq61z2I6ms1KjVVqy+etP9fl86i+s4wmVJ5yY+i1NfFV49
      y75VX79ujLrqmlmWT6BUu1tvE1jMwppmhodZIrpYLCqnzQiRDxFk+SVt/TiOYdt2oStHEATS
      D2BRvGVZMHQDSZozadlXie8p/6fyjNR7UF9fFbUyDAMHBwfIsmw7BIBgtQ8Xmu0MVagfrCqh
      tepD81q6rksGqWqOnGUyqZEibtoqU6as/asSZASpw9s2tZ2fobP4FKL7tuzAIUYjRP/yXyHZ
      3wf+xn+O2rHlkBxngI8GA5m0U02l4XAo6wIMXQeeP0ej1UZ23AE6iqI8GSp0zH81Qv2NjuwZ
      y6Zj6savsv+rTlz1s/A/voeNFbZG9ZD9x0ERq0JdRHkxyguhOnBlR0mlZlRBXTC1pyiTXwzh
      nvXeVb5B2dfYRqRpiqj9DjT7JES9+NffR/z//hDh//ovsfjsl3mvpSBA8ic/RvzJx7LjWhot
      oImTSj5VKenjMRb/7J8j+f73pZ9Aocm0DPU3OgUKBM3M8jOsOhHU562i6nd0vrfmBFA3FRvb
      zufzlaS5stZXoTrS/J1adC9Ezs9RKQZVjlV583IUktqHVEWVD1J1IvCe1O4O2wRmbR3Hkzyt
      MAxhPH4MGAY0z4PRzf2CNElgJAk0IdBqtRD5U/zhv/gn6D18A9/4L/5rpGlJAXge7L/2PehP
      nkAAMr/AnBATh5p2Ur1WrixbFRIlsizDwcEBLMtCvV6XUbdyBhrYEh+gDFWb02FZZder2mVV
      6JSvo90IQBayqDUL5feVN2+WZZhOp5jP5yubL1WhLBCapsms8zZGhAzDKNA2eFrq3/4WrLe/
      Ar1eh9VqYT6fY3DwDL/49Cf48rf+ChqGgUTToJsmDNMCBGRdQ3a81ommQf/d70pF1Gw2ZaiU
      68RTl4pmPB4XehpVQT1Rp9Mper0eDMNAGIZ4+vSpbLfOFivNZjMnYl7Jil4AtPuEELI7m6rB
      qzZelW+gorwRyz5G1YlStamrnOcqU0zXdckCZRyd/3HI97ZSnFXwGdTrdeC4Ox5JfoZpwqk3
      oIkZIDyYbh1/+e/8fRimhaPBAI7joDVJEP/8U2i//RZG03GhnSQnAaknuq7r0A0Dz/0Z9htN
      tFotTKdT+L4vm+uWcxJCCBwdHWE+n+Phw4fy+q7rot/vS99PnmbHQ9C3VgBc14VpmvJ4VGtN
      ASxp6vIkx1XmUdkcUVuhqzivU1oWLnaX4AbnacN4OCNBLKvk591GqLXI5DSxHbxV9/DVv/Sf
      4ejpD2C6dehmG6ZpQyCfCCSdYQFYVt6BQosFYj3X1IZhSM2urvloscB/+4N/i7/3O9/GV7o9
      tNtt+XyfPn2KJ0+e5JcVJ4U0tm2j2+0uPTs18ahpWqGuejtXHCd8+FarhadPn8r2hERZM59V
      bln1PU8SdhzQtHxQBQsxWq2WzFaeFtcvCxU3P5mOLARXX8Op9UyO0RzYpmgQQUXBZgNcK5qN
      aZqh9/B38+Hhi4UkNfKUs++1UP/SXRwcHKDf6yM+CGDuuwiCAHt7e9IEHY/HaDabea2A4+Bv
      f/0DPDwOgwIn5mOVomCU7rwh5a0VAIKFE2UHqewTqPmAVbXA5VMDgNS+WXYyaon9KIfDIer1
      OsIwXBq+R6wykRgRYZG7ej98DwtdVNbkNgoAkH9mzhvTNA3j4RB/8sf/Hg8fPcaX33lH3r/r
      uohECCMzMR6Pc9bsz34GvP12HjUKF3D7+WnneR7G47GMztTrdThHP0XWegK91sM37j8s3IMQ
      QgqJ+jPghJfl+/65qvG2XgA0LecLjUajws9Vj55QTaCqzbTKN6DwcHg2havf72M0GsmBd+vc
      K5029sNUHW/gxBRSGbCkHGzz5ufA8slkgiRJ8ON/9//hxz/6ET756CM8fPIE0DQ4SQLj5x/h
      j3ojfLD3IeI4zrPd776LAHmj4Xq9joM/fYreV+5C0zTs7+/DJM9f0yDEPfhRBsdOpfIBUKga
      WxUMabfbODo6QqPRkOtLk20Vtl4AgGIIk1iVYFrlHJdfqzpcXFBSHPg+Rh7Yqo8nUVVjXl6P
      I3hUs4m9RjVNQxiGaDQa0pxTneKbAA6Yu/fgIbzWR7j/8CEs28Z8PkecCXjvvI1vH69Z3ckr
      /T769/8Wnfe/iTDNkE6naLzZxcHRIfr9fp4LOPwc0WwM78vv4yhyMJvN8N6DN2DbtswilxXG
      KnS73SVFpvZtVZNhQlxjb9DzoJxQKtveqxJmZce0Cqotq5pVNL2AEw6LEEJqQWomRhX49Xg8
      zrWamZsA3W4XWZZhMpnIgXXb6uyuiyzL8O7X3seTN78kIzi1Wg3D4RDNdguGkeGz4Od44D7G
      Xv0u3v7W72O0CKEZArauw/fnUpkYhgHT60B3anL99/b25HUdx5GJMXX8LqEqxnq9LlvF87nQ
      dKU/Rjo228HfiCdR6DpwTju5KkRZ9Rr1azpauq5jNpshjmM0m025iIyLM/Sm9ta/e/cuTNNE
      o9FAr9eTNn6/31+qH7iJUM01V2ndous69tp1WIaGT8PP8IPBv8Y968v43t3/EnvdHsIXL+Bi
      Acf/Ncz2V+FPxtBMS1YCCsOW87/u3bsn10kdg8RZCCpTVPWraCIBuemj1nXEcYxerydN0slk
      ktMsrmcZz4eqWD2/XkcY1NfouoZFkE+YsY9Zp+prygxQzg9TOxir7T36/X6hONRmcvAAACAA
      SURBVJ5jk6jl2Vd0k81nrwIcAMiQLh3VFy9eHIcuacKZJ6ZK+AUELDyqv4mvNn8LPeMJ0iwX
      ljt37uDo6AhZ/30k2QK240A3TEymUwT+GNBzH6Ns3pSfB9tN0idUlQ+z+5qmybkJzNmUmQCe
      5+WzxraBDn0WptNpYSzqecFF9Gcz/Jv/+//Cs88/h2WZeP83fwvf/AvfLWgRCgRNII7eYTiT
      R2utVpP+g5oV9jxvK4fVnRdsX0MTkWAZY8eKoIcj2A8+kFqa/Vhpp49GIxi6jm6vJwmOh5MD
      vFh8jreC+0gaDhYiRi3+E4jGbyFKdEk5Pw0MeQ6HQ2TzBImRIYzymmU1yRbHMb744gup9R3H
      weHhIWzbRr/fB3BDnOBVFIPz4l/9T/8jXjz7Qn7/R//mD6DrOr75F767RG0QQhTou3RS1anl
      qrZib5ybbuIAx4ogy2BnGcZhiJbnwclm0KMJzMYjpGkGYbSgt+7KzUqtq4YlX754gYbn5dni
      4/qH/fZd1I0mIiNC8HwKrW9hpr+PZLLAaDyWlYGaphVaXdZqtaUJnWEYwowAt+1iOBrKxmv7
      +/vQtLwR297eHqbTKQaDAeI4xv379xGGIUajUT54+3qW+HyocnrXfQ9f+/LgRWHzH78IP/vp
      T/Hb3/p24cc8KtXoDbuZVYXUGNNWheOmQxMZ6i+eI3v8BIaho/7L/xOG/wzZe38HmdlGvdGo
      bK3OTei6Lt792tckbWI2m0khGS1SRKmO/qM2MpFJ4qN7PDGGYeQ0TZHqCQQEkmkiHVhyfGzb
      hlWLoQf/Ab3eV1FPUpjTCaJOB47jwHVdOaWHoC/BgMWNEADHcQqZ07MEoOp1q8aQpml1Akq9
      hiqA5cgTH2pVyd9Nhm7ZGNx/gGSxQKNeR9x9D5ndQmp5sExLbv5VBEKuCwDZ+gTIT4Zew8Z0
      EeGX0xTv3qmjVnPRaDQwGAxkVlzTNKR6jD8c/B+Isgi/2/0e2qJXsAZ0XUcGB5HxFYxHYzjd
      HmBZcBUlxG6E6nQcVuTdmCgQ+/avO0u3Kkewf/cevHYb0/G48Ls33/qKJNtVXWdVoo0PnczJ
      27T5aTNLLZxl8Lu/Aa33QZ45P6XWlpurfD3SqnVdh9dswDR0OHqAJIkhRP56+gncqIlIcBA+
      RyZSDJOX6Lp7S61r4jiBP08RxwlGx057W2nSRdIbh2vQjCK/6Uac14ZhoNPpnMr3UVH1cAzT
      xF//m/8V2sf1rZqu4+333sN3fu/3CjMJyv8Rq1imdIZvGziUUO3lz/DnaUM6ynmV+XyO6XRa
      6BkL5AVQQll3nhhqoMPWXHzQ+ia+5n2IB/YbSxQXtZrv3r17aLVaaDQaS89uOBxiMpnA930M
      BgM5TDtN05sRBQLyDzmdTqUpdF6o0YyjwwPYjot2p1PZ1aEq68zvy5u92+1uZVHLqyLLMhkE
      8H1flqqyxylPR7VjBpt/sQiFQuRPpscJsmLTKrZOJFtTZcjyb5BcuFgs5IRL9bW1Wg2LxQL7
      +/vy2ZBXxPDs4LhUk8+QNef1ev1mCQDboV+kXXaVli7b9qpdv8r0KcelO8cO122FEEJ2dGZN
      QxRFmM1mlc9BCIE/fvEj/OWv/FXUajUE/hzDP/oJun/pg8pOekDxROUpwygQ64WfPn0Kx7JQ
      CxeIvbw+gIX5YRhiMplgb2+vcH3VEuAzVQX1xvgAwEkokkMXziMAqmNWdtpUc6dq86vXKIMF
      27cZrKIajUayL5BavaU2oBIir5t+q/cV+X7bddD9i79RGduvWlP1lBgNh3jx7BneevddZLoD
      yzKgDweAl9MoLNOAlobQHAfDiiIlwzAQpwIiE7DNE9MMgMwL3CjjlYmmXq93rn776qavMnfW
      +buq7cn7qKpMuk3IskyWfzIjTjYrSXzq15yjtt+8J6Nipmmi3rwY/6nT7eKtd95BkqT4j5+8
      QJQJjFptjEaj3Pcafgz9D/8xjHhcaF4A5M85SjL80//tT/Df/S8/xiJKC8+QNPgbJQDASUTB
      8zwEQYCjoyPZY+Y0lMOaqlCownHWdTRNk7Te2xT5KYPMWEZP1I2jtoZRAxPs/ZMkCV6+fInB
      YLDUVY9gTuW09WZzhCwO8d2v3kXgzzCdTmWMX7g9iPsfQpg12U1OVXBpJjCehRjNQiRZMXxK
      lu+N8QGqEASBpC+XPzxZgKzwqoJKhV43ydbpdG5Mb8+LgnZ/FBxCN1wIzZXJLDJaV518HHxd
      jtx5nlc4BTgilacIzVvgJAxLLtaf//In6DT3EWZawUEmrZza3/d92LYt/45hGAiiDJkQaLqm
      vDYAvHz5Eq1W6+b4AFVQSxdZXcRcAdvqMbGiCoGq8cs/A05oDXTE1CTOtkxruUxQkUTzA1hu
      D4aTMzA7nc6ZJh9j+erUTSHysk81Yah25xiNRnK+MukkpD3ruo6Pgqf48E9/CffDb8A5Hq9E
      geScBhbth2EoKdRpmsK1dGjacpscvvZGC4CmabJ9HxMe6qLz99PpFGEYyo2txrENw5CxfC4a
      Q2jkk3ByIdt+38a4vwo6vnDewDyKkS3GlcXmGjJAAEIrrgdrolUwrKpOjSz/npE+gibph3e+
      CfOuDpimnAPHHqXs5F2r1TB7OkT7YR/dblfWbJSfF/fFbDbb7q4Q64BJGd/3ZW8ZblI+LF3X
      4XmenF4iHajjY9fzPJkmB5ZNIdM0YZomLMuSUZDbGvkhy5JNAnRdLzSkKkN/9seAVUO6937h
      5xyMsa6PdFaCk0M3qk4f0qM1TUO978FybVneqlaClZ9vv9+/OVyg06BpedXQZDJBrVaTdbyq
      JlGzkKzoarVaaLVaS4u66kEwU3mRiY83AaQv0zSh6UdnsQrp/d+p/PmqzW8Hz4EsQdR4tPI+
      tCyCJjJkRn6CsBwyDMPCEPTCdY+frdW2kIkMwXwOkaTo9/uyhQuTYoxUkcJyK85yy7LQ6eQN
      VU3TlO1FqnIFmpYX2c9ms5XHcRX4PjpdYRhW1gbfVARBgDiOcXR0hKOjI2nHT6fTc60TcNKG
      vIy4fh9x8/Gp79Umv4Z29JH8nmNoWeCy1mcZTHDwoz/FfO7DcZx8AEcUwXVd6S/Qab7RUaAy
      JpOJHNIWBAHG47EkYOUxYB2AkJqtyq49DXQO864I/w5vfOlL2L9798b7BGwnSJtZ9ZFms5ms
      tGq1Wmt91jAMMZ1O0e1218qT+L4vKRZ8Gqr4cMJMEASSCiNN3CyDHsyRNE5apWgApqMRWt0u
      tGNz9YunT/HWW28VGpUJIW7HCUBwBKcQArVaTRa1A0CYCPzPP/gEn73w1ybVVYGJn3feew+t
      dvvGm0IkrDGLu+Toahr6/T4ajQYmk8la3aw5D/rFixfSP5tOpysHihTuB8XND5xUoVGDF6J3
      WQa9dEIJAM1OBzPfxxfjEZ5PRmg0GjJHAUD6dTfeB1BBugS/rtfrsrZ1GiT48SeH6Ldq+PK9
      83VgY9KGUQrDMNBU4trncfi2Dez4BuQbrTyqliFL9gXiSbGq7JMCFccx9vf3kSQJxuMxarWa
      jKSx+5vqmKrjVFUwkWaapuz6wIa7mqYhNU2k/b2l9wG5b9AVAnEUIc3yqZ3T6TSP/x8/u1sl
      AMBy0bxt25jNZtjzbPzDv/3baLiWTOdXgZqQ/WgYDuXANsdxTigCQQAdQEMhYd0kQYjjGM+e
      PZOauar7skqJ1rS8q/ViscBoNJKjkwi2MnccR0aPqGlns5kk1JFIx0QWFUtVVpjJMraVYe6n
      PAu6Ctzk+nFCrer1t04AyuAHzrIMTdcAcBLlqIrokD4rhECv15PXKNQWHCddJk+fIpnPYR8/
      2CyKYBwn3KrKBbcNhmHgwYMHso0jgNx+SAVgFucqqOD40+FwCMdxUK/XEcexHHpeVi7MuNMf
      Y6ty3/dl25ler3dmeJn3waSnGu6uAvMIYRji2SjCnjDx6G6v4JfcKh+gCrZty2O9TJiazWYy
      ysDFoj1cLuBQkWusBYz7XTS//vW85G/uQ/ziI/ijI4y/+NVS9Rq13Kqj/jrAxKAKEacIB/NC
      HkTSRZQOGJZlodfrwfd9HB0dIQzDlUGFygIlw0Cr1ZJUlXVyK1xTvrfqb3GIyXg8xvPnz2V9
      QrdVR6PmLI29fS1OABass9hC5f+Mx2PZUCmOYwyHQ9RcB6ahr9yoQggk4QRa8Ato9e/kwtJq
      I/rq1+AKAdHwpJaRmcf5DP/p6D/ifvMRHnYeb+3poNkG3LtN+dlZTggA4SJAlqaoeyfBhX6/
      jyAI8uZWXK8khabrEPqJjb8qGkRy4zoYjUZ5W8Z79yQtZTAYyGuwNsB1XRmx4kn85F6vcubz
      rRcA4CRZZts2PM/DfD6XA5nVijDWo5oQEOG80I26fD23cQepe7KorJgqZ5KZjwiiABN/irda
      jSs/AVSKQXkTjMdjDIdD6WSqIBcniiLUajU4tfpSfoWlhVxDXdcRfvoc1n4HeuekQS3NoiQM
      IARguavLKkUaQDMc0EDh30sQw3JM6ReQ88M2i8EizDP7x4LHfBDNsiql81oIAKFmABuNBqIo
      klx23/cxGg6Axc+gex9CwMXRy0PU6vlDZIKN1yFFoupvVP2s3+rjg+Dr+OKn/wHNb/7eldYR
      ZFmG5Fe/grBMGI8eL5UmzmdTdHt9DIfDfGyQebLJeP/qqcmOcXRGGW2jcLjvPjrZtMfUim63
      CwAIJiMICJhOnukdDAZotVpKgY2Goy9+gM69b0E3vQJHKDNSDKMxOlFP9gliqNtxHDwbRXgx
      HePdRx3J8TqLvPhaCYAKtRYVyLVFlqXwxQPYwQuktbuYBwHSLH/g9+7de+W/V/faSJ40MJ/P
      ZYTqKqDrOnCcsCs7qGmawjYsuJaNOEnkSVB2/OkfcZQtGbbqbAW1Vpim33Q6RaPRkALU6N+V
      pwZDogxd5+8Feo/+qvybFAzWfHi1Lp4+fQrP82QdMEOlb95rwTQt1Gtugd91Gl5bASgjD/G1
      Uau9j2T4K+i2A8sVMHQNjZr7yjUAQgiIdI5W8msc/FkTd95+gN5+f0N3fzo0TUNdGXqnYjgc
      4k6riyzKNb/v+1KjcxMJITAYDFCv1zEUGXqOjflgCCHyhrS+78N1Xfi+XxAyskpXKRDf97G3
      tycFYhUoVCQuOo6DOI7x8uVLaXpyHNV5fatbRYXYBLjYPN7Hx8S6/t7eygWm/TscDuWxW9ZA
      aZpi8eLnEFmKzHsDruvA3oJi+vF4jGEwxzCY447lyPFH8/kce3t70HU9H3N0zOU/CObwbBs2
      NNlq5OHDh4UTQw1PCiHw4sULWUik+g+sEVhVsETyGs0ytfmYoeuIhgt49zsyKVf2TdahbexO
      gBLoJwC5w2g7Dhb+55iOYnT3lqM3QuTtWsbjsXSaZ7MZXNeV8XJpw9buwJx8BmtLNj8AtFqt
      fIaZk880G2lAmqW4dzwfDYCc9DIYDNCq1zEbjhDbNj4+TPD+k7tyg1IIypvccZyl9jMMOiwW
      C/R6PcnpV8PHJBwCkAMvTgQLgAYkcSLnB3DEFTtyl536KuwE4AzU63X4I4HFwpeDu1nGZ5qm
      pOkeHR3h3r17hXwCe4sCuVa0TANoPERtiwrpWVNhmiYCf44ndQ+xDmjHdnW73UYcx7LwpN1u
      y2zwe0+6MPQMup4LuR2mQCaQuYY0a9hKnmFSIfJ+QKRdMGbvOI6cB6xpWmFqplpfQD8jTVMY
      LRsHhwdohS35XCiE64ZWdwJwBgzDwP7DDzAYDBDEc3w0+1P89t53EMcxPv30U3Q6HQghcOfO
      HYzH46VpkEIImIYJoQlEcYJFBkwPDgpDILYBpmnCazQghj6mWT7/l3SQphMiRv45LdOAbVkI
      NRumiKErpk5s59spy3JtzyEUjuPIYvYgCOA4Tj4eCflmPTw8RLPZlCxUTdNgahmiREgnGsif
      xfc/+RjfePgIzWNB8DxPDsIQQshGZeuOnNqeJ7CloEm0t7eHTrOLD3q/IzkznDbORI+m5Xax
      WrhhGAae/fiXMI7rUmkqqbPItgU1r4nQs9FqOPCCP8edO3dg6Dqw+ARA/lnS+QxpMEOG4xlb
      iqaN0wRxmsjZAmoCTB0xVavVgDBDfBTAsizs7+9LSgQAmIhhfPy/w7JM2fmN1/grX34L3nFN
      Bk8FhrUpBGyYtQ52TvA5UC6iHw6H+eAMy4CexUg0C1mWH/Hk0DebTViGiVTkbQQHgwHudjrQ
      ZzPEnY4UIjX8eJ0QQsAfHyE5+E8YmA9l8680TTEcDrG314dlWoB20qgsiiIp0FEUIQxD+T5O
      zVQbCLN9uq7piOJI1lzPZjPs7e3BMk0YOpCKkwgUfaoqHyxJEslDajQa52pWvDOBzoGqRbUs
      C9ZP/wW0X/4B9N//bxDWH0jnS0aHxiM5aVIIgXQRQownEO02fvjZp3i724N+XDR+WhuXq4Cm
      aWi0+4jr38bk+XN4niejWo3jmQAqlRmANF04qJqvH748QKe3JxNpbKtIBQFAUq1p908mk5y4
      2GzKPkP1eh3T6RRpmsqcQhAEAE6iPe3jbhHnnc6zE4ALgsQ6TdOgzb4AZi+A+KRfpq7rCIJA
      FnQztNrv9+EHAepPHmM2m+FhqwVNZDKuTY7LdZ4ETNI9evSo4KeUawVUUDuz3chsNkOntweB
      fI6XGlEi81PNNRBUGp9//rlMknFyJJt1kbfleR4+OwzwzsMWNIi1K9ZU7ATgAuCUQbZa0b71
      D6D/5t9F7N6BSFIsFgtZ/OF5Hmq1GsbjMe7cuQMgD+9xykk8myE9bufium6h2OO6cd7NRCH3
      Qx+fjT7BPecBBoOBPDXq9Trm87l0UFdRSTQtb2fT7zgQ2RzDqSlPFiqU6XQK13VRs2PYloVm
      s7G246tiJwDnhBB5k6fDw0NZ1JHpOmD2gCR39A4PD3H37l0AeaLJNM1C52K28mgfl1SqG43x
      7JtQT0AIITAfDJBOpqg/fgQNGhzTQbPRkKHQkXYEx1zdYUIFQ6GG7SGJbURRXp8RRxE+/vnP
      8f5v/iaAfK3eedwvNOE6L3ZRIAVqomYV6LDVO300Gk28ePFCFtAQTC61Wi10jh3dAgf9WBtW
      zQ1mpIhs1W2LFFVBCIFssUA2zs0cUzPxuP0G/B/9Qjr2HbcLLVue8qlbOgxzeRvmXT4STGcL
      3L9/P+ceuS6++hu/IXlFZPe+Sjh5dwKcEwzVvZwLPGzkkQk2Zq0ikV0EaZpiPB7LZBsHTmzr
      iaBpGur37kHcvSsz30mSwP7aI1lL3dDzeL2ncJJ0Xcdh/AUapgcXDXktL/oC2QLQ9t6BYRgy
      Uaa2ZWem91XXZCcACtZiDx4niHp6gsPDmaxrJfORNQWvCmY7mdon25IZz4sQvy4LKn0EyE/A
      o6MjPH15gEajIX2bshBnWYa7Vk6dTpHKa2lTwPBaMG1bZqMXiwWOjo7Q6/XyqfR7e2tTynmy
      VymnnQCcE4PBQPYbUsvy7OOHlSTJWq1DzgPSB1TUarVXPv4vC+Tid7tdRFEe54/jWK6XatYl
      8fLgw8xpQXPywiUKPdtZTiYT3L9//1ztKf3JFOHhCO03Hyy9bycA5wRpt2UNzLh2uVPCRXHW
      NYIgkM7yqziBlwXP8wpZcWZqz0KWZQiaTTi2DQ1AOAoAIWC183W3bfvUIX1VEEmK1K+eKrQT
      gHOi2WxKLa9WSZVbgr8K1vUj0jSVWnId5uNV486dO7IRQBRFMvIVhiGA6jYsBLPjVs2CECdZ
      +Is0NWt026i1vUqTabvUxg0AOxKoD2JV7fBFsQlHehtgWRZarZZsaKVpGkajkezgrU59JFhk
      Q5MvMwBYJ1N96BedB+q8h6XfXeiTveZgBRK1PTkvapc14rwPyzAN+PoEB9nniI3wTEEoO6Db
      BNIbCIaFe728prdqbcgrAvIuEByIqJovp1WPnRc7E+iCqNfrsnpKiHxcz2w2Q5qmaLfbsngc
      wKl2q+oU6oaO58mv8cPhHyDMAvSsO/j9/l+Hla7mBjUaja2eWsOuzlWbnYqjnAhkZI0EvDiO
      CzQMdqXjNJpXiYjtToALwjRN2abPMAxkponmcdLr+fPn8H0frVYLtVptZbvwMjRdwy/8P4Of
      TpGIBAfRM3we/vlKv6JWq52b/HXVUE1DrhXBgSXPnj3DdDqF7/uSXgKctGJkf9HJZILJZCKn
      uwRBgOzzH0mf4kL392of7/WGTMQYOv77P/4Rvv/ZJ3BdF/fv35cPnv3oV/XZVzevBsA1TpxZ
      HTpcvfrkINV6mzc/AFmmCABBNsefHf1ECgEL6D3PkzmCNE1xcHAgmxA3Zj7u9HrwPA/tdhu9
      Xk8yQk3TROo9KQgVqSTrYmcCvQJ4CsRxjL/1ta+jaS1HNciQZI/K4XAIz/MKxK2TskmBrzc/
      RJgFmMQjPKq9ifv2Y2TJsvlw2qTGbUGWZYW+o65Rw5e6X5GnYRRFckoPk3ssgJFs0ZcvITp5
      lZ2tTaAtniOz38u/t23Y/ZNpM6zPpiO9a4tyyWBV2GQywaOmV+hho4YlGdVhnStH9qi/BwAI
      oIYm/mLnryEVKUxYlZv/poBRG/n5MsDVip0hTNNEqlt4uRC465qy79BgMECj0YD53ruYTCb5
      aWq3oDtNiGx5pK0QojCEb11G7c4EekVwHi571vBnfMh2FsDxf12wa1n9VAUhBEQC6KmBLF29
      +bfd9AGKzYjV0K7KgM2yDLYmcLehy3wKKdNRFCFJEskOjZMMYYzCLGBu/KOjI9kx+jxM2t0J
      sAFQu3MWwbNnz3Dnzp38IWcCECcb2TAMdLtd6fCVq7/UfjqnYdsyv1UYDAZyFoDab8k0Takk
      nj9/Xuj7L4SQ2XSORGo2m7JQiFVp6gafzWaFdiqrYv5V2AnABsGiDc/zEARB3n9Ur0Pz3kR2
      HLtWC7c5G0vFOkc3u1lvOzhfQRVm5kt835fhY9M0MZ/PZWjTznxokY/I6CJNU8kErZo9ACjR
      JU1DmiSVJaVqLkE9jXYCsGG4rou9vT188cUX8meMgrBSjEOj1SKZMsqkMRXXXTK5LkjRYD6E
      pg8L6VVqNOt/TdOEliVAGkI7HtLhuu7Kzc+/M1jMMQ1DPGl1KivDsizD4Re/hmFa6N+9vxOA
      y0bVw1osFrIKLAxDObxbhaqdqgSAUaWbADbd4vTJw0WAnluDlhVNQkZthMjni+nNDmB1oB8P
      xqtq6ktQmbRMGy3r9H5AWQVVfScAG0aWZRjOFjCdhhzIwSJ51Rms1+sYjUaFIpGq1oIqWCt7
      E8wfgtToIAjgmiY0DZIirWkaPht/Atd0cbd2XzbaffbsGTzPw2KxQL/flwK0SqmoWeZVHTV0
      XcfdJ19a4lntBGDDWCxC/A//z8+w167hex/so9vtIgxDaecGQYBWqwVr/kPc6X8Lg9Gs0EAK
      WNb8tIENwzgXD34bwGTgfD5H0zAh0rxmwvPysPFD7zG04yZbHNPK5gFqQus0pUBUjXxSX1el
      OG7Wat4AWJaJv/GdL8PUAcvKs8E8luv1OqIowmg0Qsv7EFqWF3qMRiPZB0d11lhXrPa8vImg
      5ubnUvv+GyLflBxaqNZTSDv9uCimCqrJc55p8sROADYMwzDwcK95XMdaK1SHURs6joPpbA4g
      PB7MkS3RfC3LQrfbvRHhzrNA7auyOCeTCbrdruyakaapnCIDQFIkWq3WqfXQpmnKCTMXqZu+
      +au7ZaAG5/RJYDlpxWQYKcF05NT3q3Tr2wA1Ns/ZC4PBAM1mszDUjrQIQ0zhRj8+U6vTn7qo
      b7Q7ATYM9rzn6B7gxLlVozuOkw+jCMMQlmUVOhxsS2OsTYFmIIddA/l0ycK8XoU1KoSAMFow
      O9+9dId/JwAbBIvXp9NpYfAbsDzBnvz2NE2l9qNtTGLYbQKpDcyFlOsjKPSx0GAASNMMhrF+
      Rvei2AnAhnFaM6syeevw8FAmeNSaVzrEtwmmaeLRo0cYDAaFn6taP0kSHEUmeq4GxzAKsxYu
      C7fHyNwSLBaLpc1bnl4CQHZL9n0fQRBIAWDI8zaC3TQITTfwbGFiLixox3b+HSeFrecUiavw
      gXYCsEFQi6mxaF3XEfufYT76M+j6iQD4vo9er4c7/b783rbtU1P+twGqcMdCx8ejFM/8TGZ7
      dV2XnfCuArd3pa8JtVqtWJGUBfjoh/8YP/+jf4Rk8bLwWhuA+/TXcn7Wtja62hTKjYBtPcM3
      7pr4UkuHOG4132w2r7TMc+cDbBCcF1CI/Rsu9p58D0k0hul0IHDc/9LzoDsOokePkWUZ+v3+
      jcvyXgS2bcO27XxAt22jJuskbNlG/SqxG5G0QcxmMxwdHQEoclJYnqcmujjNhD2FtqnX52WD
      67ANp93138EtAcf2BEGw9GA5MV0Fu6WxkOZ12fzASTH8NmA77uIWYLFYSNOnHMNfFRbdZIOn
      HS6GnQBsCIz/V9mwLAdUSWA3idd/m3H7va4rAieYq7WpKkh/4FT2TfYS3eHi2AnABqAS4E7T
      6rZtX+sI1B2WsTOBNgSS4KooDNz4t43fcxuwOwE2hHKSR0WtVpNtP3bYLuyeyAZAJuMq6m65
      bnWH7cFOADYEtdOZiptYyP46YScAGwBLGoUQS1NPtm2i4w5F7HyADYAljUmpK5njOIVJkjts
      H3YnwCtCCCH7X7IHDrEzfbYfOwHYAMjlKbQCBzCdTjc+M3iHzWInAK8I0hz4tSoAcRzvBGDL
      sROAVwTtfzI7VTQajVtb3nhbsBOAVwTDn3EcQ62rMAyj0Opkh+3ETgA2ANM0ZcNX4CT2v8v8
      bj92T2gDsCwL7XYbs9lMUiJWaX8S59YZm7rD5WMnAK8ItZ0fQ6KTyWQlLZrTIl9ltu0Om8Ou
      JngDSJIE0+m0MOQ5jmM8fPhw6bWrusXtcD3YnQAbgNqX3rZtOe1k1YSXm9zq/LZhJwAbAEcB
      WZYleUFRFBU6vl0Gdr7Eq2MnABuApmmyTz37fMZxjOfPn2M+n18aFfq0+YJYYwAAAOdJREFU
      cUo7rIedD7BBcDPGcYwkSeRExJ25s73YsUE3CG50dj+7bX3+byN2JtAlYrf5tx87AdjhtcZO
      AHZ4rbETgB1ea+wEYIfXGjsB2OG1xk4AdnitsROAHV5r7ARgh9caOwHY4bXGTgCuEewosSO0
      XR92AnANEEIgDMMdnXkLsBOAK0aaprJ/aJIkcoL8DteDHRv0ipAkiZwW6XnebtNvCXYnwBUh
      SRKEYQjXdeV8sJ0QXD92J8AVIE1TBEGw2/DXAHUqZxXMKIqu8n5eS4RhKJtmTSaT3aywK0KS
      JLI9jW3blY3K/n8kuVEM8ad6XgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      AfmcJDYb6J4dAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
