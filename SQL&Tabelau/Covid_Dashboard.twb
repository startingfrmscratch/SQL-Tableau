<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0413.0938                               -->
<workbook original-version='18.1' source-build='2020.4.4 (20204.21.0413.0938)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Tableau Table 1)' inline='true' name='federated.00xjhx70p2waf516w07py0bmrobh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 1' name='excel-direct.014xxpa0816bfx10xog3o19surgh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/h275621/Downloads/p/Tableau Table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.014xxpa0816bfx10xog3o19surgh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.014xxpa0816bfx10xog3o19surgh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='DeathPercentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5C62E34B74944CD38487577441434A28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5C62E34B74944CD38487577441434A28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DeathPercentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DeathPercentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_5C62E34B74944CD38487577441434A28]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_5C62E34B74944CD38487577441434A28]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_5C62E34B74944CD38487577441434A28'>
            <properties context=''>
              <relation connection='excel-direct.014xxpa0816bfx10xog3o19surgh' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='DeathPercentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 2)' inline='true' name='federated.1o949f30qfwjcu1330x8a184kia6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 2' name='excel-direct.0amkj8s153a0nd167ox850827jsp'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/h275621/Downloads/p/Tableau Table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0amkj8s153a0nd167ox850827jsp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0amkj8s153a0nd167ox850827jsp' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='TotalDeathCount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EE81BA07A4ED43A196A7BE3DD5B0087F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TotalDeathCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[TotalDeathCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>TotalDeathCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_EE81BA07A4ED43A196A7BE3DD5B0087F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_EE81BA07A4ED43A196A7BE3DD5B0087F]' role='measure' type='quantitative' />
      <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#598ab6'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#75a6cc'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#94c2e1'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_EE81BA07A4ED43A196A7BE3DD5B0087F'>
            <properties context=''>
              <relation connection='excel-direct.0amkj8s153a0nd167ox850827jsp' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='TotalDeathCount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 3)' inline='true' name='federated.1bc226j1n3zymo12ibaf70vq6333' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 3' name='excel-direct.1f1proe09hqg291eayzmu0oge0ue'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/h275621/Downloads/p/Tableau Table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1f1proe09hqg291eayzmu0oge0ue' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1f1proe09hqg291eayzmu0oge0ue' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A85DEAA789B24ABD8EE31518E90E916D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A85DEAA789B24ABD8EE31518E90E916D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A85DEAA789B24ABD8EE31518E90E916D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A85DEAA789B24ABD8EE31518E90E916D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A85DEAA789B24ABD8EE31518E90E916D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A85DEAA789B24ABD8EE31518E90E916D]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A85DEAA789B24ABD8EE31518E90E916D'>
            <properties context=''>
              <relation connection='excel-direct.1f1proe09hqg291eayzmu0oge0ue' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (Tableau Table 4)' inline='true' name='federated.0lk5bfi0ya34we14a8t140hentb1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Tableau Table 4' name='excel-direct.0mdli6x17iu2xp10b6avo1i1k6kk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/h275621/Downloads/p/Tableau Table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0mdli6x17iu2xp10b6avo1i1k6kk' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0mdli6x17iu2xp10b6avo1i1k6kk' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='Location' ordinal='0' />
            <column datatype='integer' name='Population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
            <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADD79DB19C9A449D978DA826F2007D72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADD79DB19C9A449D978DA826F2007D72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADD79DB19C9A449D978DA826F2007D72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HighestInfectionCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HighestInfectionCount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>HighestInfectionCount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADD79DB19C9A449D978DA826F2007D72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PercentPopulationInfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PercentPopulationInfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>PercentPopulationInfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_ADD79DB19C9A449D978DA826F2007D72]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Highest Infection Count' datatype='integer' name='[HighestInfectionCount]' role='measure' type='quantitative' />
      <column datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_ADD79DB19C9A449D978DA826F2007D72]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tokelau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_ADD79DB19C9A449D978DA826F2007D72'>
            <properties context=''>
              <relation connection='excel-direct.0mdli6x17iu2xp10b6avo1i1k6kk' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='Location' ordinal='0' />
                  <column datatype='integer' name='Population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='HighestInfectionCount' ordinal='3' />
                  <column datatype='real' name='PercentPopulationInfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 1)' name='federated.00xjhx70p2waf516w07py0bmrobh' />
          </datasources>
          <datasource-dependencies datasource='federated.00xjhx70p2waf516w07py0bmrobh'>
            <column caption='Death Percentage' datatype='real' name='[DeathPercentage]' role='measure' type='quantitative' />
            <column-instance column='[DeathPercentage]' derivation='Sum' name='[sum:DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00xjhx70p2waf516w07py0bmrobh].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00xjhx70p2waf516w07py0bmrobh].[sum:DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00xjhx70p2waf516w07py0bmrobh].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.00xjhx70p2waf516w07py0bmrobh].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.00xjhx70p2waf516w07py0bmrobh].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.00xjhx70p2waf516w07py0bmrobh].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.00xjhx70p2waf516w07py0bmrobh].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.00xjhx70p2waf516w07py0bmrobh].[sum:DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.00xjhx70p2waf516w07py0bmrobh].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.00xjhx70p2waf516w07py0bmrobh].[:Measure Names]' value='206' />
            <format attr='height' value='72' />
            <format attr='vertical-align' value='center' />
            <format attr='text-align' value='center' />
            <format attr='text-format' field='[federated.00xjhx70p2waf516w07py0bmrobh].[Multiple Values]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.00xjhx70p2waf516w07py0bmrobh].[sum:DeathPercentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#5500ff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' scope='cols' value='#ffffff' />
            <format attr='vertical-align' value='center' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#d4d4d4' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.00xjhx70p2waf516w07py0bmrobh].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='3.922652006149292' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.00xjhx70p2waf516w07py0bmrobh].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{7F9A44AF-F4B3-4576-98D9-05B0369C3D3F}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 2)' name='federated.1o949f30qfwjcu1330x8a184kia6' />
          </datasources>
          <datasource-dependencies datasource='federated.1o949f30qfwjcu1330x8a184kia6'>
            <column caption='Total Death Count' datatype='integer' name='[TotalDeathCount]' role='measure' type='quantitative' />
            <column caption='Continents' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[TotalDeathCount]' derivation='Sum' name='[sum:TotalDeathCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1o949f30qfwjcu1330x8a184kia6].[none:location:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1o949f30qfwjcu1330x8a184kia6].[none:location:nk]' value='101' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1o949f30qfwjcu1330x8a184kia6].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.087458610534668' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1o949f30qfwjcu1330x8a184kia6].[sum:TotalDeathCount:qk]</rows>
        <cols>[federated.1o949f30qfwjcu1330x8a184kia6].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{9C058A00-E4F4-475B-B196-07602D9AF855}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 3)' name='federated.1bc226j1n3zymo12ibaf70vq6333' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1bc226j1n3zymo12ibaf70vq6333'>
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Sum' name='[sum:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1bc226j1n3zymo12ibaf70vq6333].[Longitude (generated)]' field-type='quantitative' max='14712136.572232313' min='2239335.587105711' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1bc226j1n3zymo12ibaf70vq6333].[Latitude (generated)]' field-type='quantitative' max='6129407.1633846881' min='-1599138.0407468341' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1bc226j1n3zymo12ibaf70vq6333].[sum:PercentPopulationInfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1bc226j1n3zymo12ibaf70vq6333].[Latitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.1bc226j1n3zymo12ibaf70vq6333].[Latitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1bc226j1n3zymo12ibaf70vq6333].[Latitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.1bc226j1n3zymo12ibaf70vq6333].[sum:PercentPopulationInfected:qk]' value='Percent Population Infected'>
              <formatted-text>
                <run>Percent Population Infected</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1bc226j1n3zymo12ibaf70vq6333].[none:Location:nk]' />
              <color column='[federated.1bc226j1n3zymo12ibaf70vq6333].[sum:PercentPopulationInfected:qk]' />
              <geometry column='[federated.1bc226j1n3zymo12ibaf70vq6333].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='auto' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-range-scope' value='cell' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
                <format attr='mark-labels-range-field' value='[federated.1bc226j1n3zymo12ibaf70vq6333].[Geometry (generated)]' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1bc226j1n3zymo12ibaf70vq6333].[Latitude (generated)]</rows>
        <cols>[federated.1bc226j1n3zymo12ibaf70vq6333].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B2A58D8C-D309-4821-A490-DC14C067BC77}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Population Infected</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Tableau Table 4)' name='federated.0lk5bfi0ya34we14a8t140hentb1' />
          </datasources>
          <datasource-dependencies datasource='federated.0lk5bfi0ya34we14a8t140hentb1'>
            <column datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Percent Population Infected' datatype='real' name='[PercentPopulationInfected]' role='measure' type='quantitative' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' name='[avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[PercentPopulationInfected]' derivation='Avg' forecast-column-base='[avg:PercentPopulationInfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:PercentPopulationInfected:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0lk5bfi0ya34we14a8t140hentb1].[tmn:date:qk]' scope='cols' value='Month' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0lk5bfi0ya34we14a8t140hentb1].[tmn:date:qk]' value='253' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Location:nk]' />
              <text column='[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Location:nk]' />
              <text column='[federated.0lk5bfi0ya34we14a8t140hentb1].[fVal:avg:PercentPopulationInfected:qk]' />
              <color column='[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lk5bfi0ya34we14a8t140hentb1].[fVal:avg:PercentPopulationInfected:qk]</rows>
        <cols>[federated.0lk5bfi0ya34we14a8t140hentb1].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{03472D9E-8406-4935-8028-C5750BE6FECF}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='37331' id='8' param='horz' w='98614' x='693' y='61318'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='37331' id='6' w='98614' x='693' y='61318'>
              <zone h='37331' id='12' name='Sheet 4' w='84814' x='693' y='61318'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='26264' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Location:nk]&#10;[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Forecast Indicator:nk]' w='13800' x='85507' y='72385'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='11067' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1bc226j1n3zymo12ibaf70vq6333].[sum:PercentPopulationInfected:qk]' w='13800' x='85507' y='61318'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='24325' id='3' name='Sheet 1' w='55497' x='693' y='1351'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='59967' id='10' name='Sheet 3' w='43117' x='56190' y='1351'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='35642' id='5' name='Sheet 2' w='46060' x='693' y='25676'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='35642' id='7' is-fixed='true' param='vert' w='9437' x='46753' y='25676'>
            <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='24662' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1o949f30qfwjcu1330x8a184kia6].[none:location:nk]' w='9437' x='46753' y='25676'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='15' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97298' id='14' param='vert' w='98614' x='693' y='1351'>
                <zone fixed-size='186' h='24325' id='3' is-fixed='true' name='Sheet 1' w='55497' x='693' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='59967' id='10' is-fixed='true' name='Sheet 3' w='43117' x='56190' y='1351'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='11067' id='11' name='Sheet 3' pane-specification-id='0' param='[federated.1bc226j1n3zymo12ibaf70vq6333].[sum:PercentPopulationInfected:qk]' w='13800' x='85507' y='61318'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='278' h='35642' id='5' is-fixed='true' name='Sheet 2' w='46060' x='693' y='25676'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='24662' id='9' name='Sheet 2' pane-specification-id='0' param='[federated.1o949f30qfwjcu1330x8a184kia6].[none:location:nk]' w='9437' x='46753' y='25676'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='37331' id='12' is-fixed='true' name='Sheet 4' w='84814' x='693' y='61318'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='26264' id='13' name='Sheet 4' pane-specification-id='0' param='[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Location:nk]&#10;[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Forecast Indicator:nk]' w='13800' x='85507' y='72385'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5DE4582D-9269-4030-BD2D-3C39EBF37C2D}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00xjhx70p2waf516w07py0bmrobh].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E8E97483-9ADC-4452-A817-7729C5F2787E}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1o949f30qfwjcu1330x8a184kia6].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1o949f30qfwjcu1330x8a184kia6].[:Measure Names]</field>
            <field>[federated.1o949f30qfwjcu1330x8a184kia6].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D72B0493-E20C-4404-B78D-88CD50EE6880}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1bc226j1n3zymo12ibaf70vq6333].[sum:PercentPopulationInfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1bc226j1n3zymo12ibaf70vq6333].[none:Location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2AE1FDB7-8BAA-450C-9124-E54EBCFF0861}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Location:nk]&#10;[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Forecast Indicator:nk]</field>
            <field>[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Location:nk]</field>
            <field>[federated.0lk5bfi0ya34we14a8t140hentb1].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3DA2372A-7184-437B-9DD2-0C76A30227CF}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1o949f30qfwjcu1330x8a184kia6].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Forecast Indicator:nk]</field>
              <field>[federated.0lk5bfi0ya34we14a8t140hentb1].[none:Location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='10' />
      <simple-id uuid='{F7C5915B-F97C-4961-BF77-AD00DA5C2990}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      EEqTAITS3gGbdeZEP2+dtQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='96' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABgCAYAAABLwH3pAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAARyElEQVR4nO2de1SU5b7HPwyM3IkWA4pKJogm3iVxbUUDdefygpW6bR3UvcOMwlbH9NDO
      NIPULHGVstWjnBV5ONG2LTEoxOF4O+CJ3WoRKnFTM7EcFKEBZbgNMPN6/kBnN5uZYZBC630+
      a/GHz/X3/ni/z/N7f+8jr8Pt27dvIxDIFMX9NkAguJ8IAQhkjRCAQNYIAQhkjRCAQNYIAQhk
      jRCAQNY49dRgmUN/mCEQ3B/EDiCQNUIAAlkjBCCQNUIAAlkjBCCQNUIAfeC123DYwk/0tJ95
      olg4fAketVQ3DKJPQ1onHO6EfaettBNYpMc0qMA6O++kiB/dDUkjYdl8OzvGwuHX4M/B8H1f
      DHCD6P+BObXwpi9oOmD4q/BQX8aUGUIAv2JU6yHKE7aGgqa1q+zK9vtr068NEQL9UrjBUz8J
      TT5Qw2C3rt3icAowApLuhEwzAEZBfBWk3yn76GsIGWR7itHToKMQKlstVNoYz2kmbL5+J2Rr
      g53J/+g2Jf2OzbfhwGkIdOsqD0yEA21d5ek3YfmTffbQA4EQwC9E6EewWNEVmizzhbOj4c1d
      8P2rsOxF4Dv4s0PXm/Yv7vQ5uRqed4Bl7nDECM//m+05XNzh5g3r9dbGi9gCyhSIdoDoR+Fv
      +V3lgxLhj86w/qGuPp+2QPwuwAeiE+C/x3fZGxsJZc19cs8DgwiBfiEmRcAXq0Bzq+vf6btg
      0WtdD6jfW+qgh5AEWHcMXO/8Vq5/ZXsOfQs8bG2XsDGe5iIEx8PGkVCcAwXZXeUTZsPAcNi/
      9Cfj5AH1UH0NlnwOQ/Kg6DP4ptC2bb8WxA7wgBC6A+a2w2u+Xavsnrye+5wvAtdwCHHr3XgX
      X4S1/wLlLTD9A/iPfLiroyvbu9qbfu482P/nWNi5A/Sj4YUTkPBmny/5gUAI4BfiXAHMeAMC
      vAFvWLEOtP97Z/VvhLaBEBQMuHVtwwNcQa+FxlvgFg4Tg3ueQ5sEx4E1h+7M4wbDN8KEHsYL
      fQ0e+gbUsbDlX6FlMgwHvvk/GB4H88O62jkHQHg0MArmLoWrajg4Fw5kwYgpP5+v7iciBPqF
      OLMK1Hmw7UdwBapzYNu6O5V/g4w1EPMtvKiH913h6/dhUS583AnVp+BivR2TtMKH0yH6v/4x
      z49fws7tUGFrvOHwaiX4eoCxGSrfga8Bwzvw76Phj6fhORfouAWlW6GwEQa+BHv2d4VTbRr4
      dMXP7bH7g0NPfxZFHIcW/JYRIZBA1ggBCGSNEIBA1ggBCGRNjw/BxcXF/WWLQNDv9CiA1lZL
      B00Egt8GIgQSyBohAIGsEQIQyBohAIGsEQIQyBohAIGsEQIQyBohAIGsEQIQyBohAIGsEQIQ
      yBohAIGsEQIQyBohAIGsEQIQyBohAIGsEQIQyBohAIGsEQIQyBohAIGsEQIQyBohAIGsEQIQ
      yBohAIGsEQIQyBohAIGsEQIQyJp+/0RSc3MzGRkZ5OXlUVdXhyRJuLu7M3XqVFatWsUjjzxi
      sd+VK1dIS0ujuLgYnU6HQqFApVKxcOFCli1bhpvbP74Ul5+fT0JCgl32REZG8vbbb/fYLiEh
      gfz8fLvGfPvtt4mMjDQr0+v1ZGZmkpmZiVarRalUMm7cOF5++WWCgy1/EKyiooL4+HhaWlqs
      zhUTE0NMTIxddkHX33rNysri6NGjZv6fNGkSMTExVm2RJInjx4+TlpZGTU0NAMHBwcTGxhIa
      GopCYb6W9tVftmhubiY1NZUTJ06g0+lwdnZmxowZxMbGMmiQ9Y8rX7p0iX379lFWVkZnZycq
      lar//jiuJEkcOnSIjz/+mClTprB8+XKCgoJwdHSkpqaGgwcP8tVXX7F9+3bGjx9v6tfY2Mh7
      771HWVkZS5YsYcGCBahUKoxGI2VlZSQnJ+Pp6cm7776Lp6en3facO3eODRs2sHbtWubPn/+z
      XOP+/fs5ceIEf/nLXxg6dKipvKmpiTfffJNbt26xYcMGRo0aRXNzM5988glHjx4lPj6eOXPm
      dBsvPz+fvXv3cuDAAXx9ffts37Vr13j99ddxdnbm5ZdfZty4cSiVSrRaLZmZmWRlZREdHc2K
      FSvMbujOzk527tzJ2bNnWbduHWFhYUiSRE5ODh9++KHFPvZgzV/2XMPAgQNZu3YtQ4cOpaGh
      gT179lBSUsI777zD2LFju/U7efIku3bt4plnnmHZsmV4eHhQWVmJY2JiYqKtCTs7O3t1Udao
      rKzk0KFDbN26lT/84Q+oVCocHR1xcHDAy8uL8PBwNBoNeXl5RERE4OzsDMCnn35KU1MTu3bt
      YurUqbi7u+Pg4ICjoyP+/v7MmDEDtVpNY2MjU6bY9+lCg8FAamoqt2/fZvXq1bi4uPT5+mpq
      ajhw4ACRkZHMmjULB4euj6tJkkRqairl5eUkJSURFBSEg4MDzs7OhIaG0t7ezieffMK0adN4
      6KGHzMYsKCigoaGBBQsWMGDAgD7ZZzAYSEpKwmg08sEHH/Doo4/i6OgIgJubG48//jgqlYrU
      1FTGjBmDv7+/qW9ubi5qtZqtW7cyZcoUHB0dcXJyIiQkxNTnscceY/DgwX32ly06OzvZsWMH
      kiSxfft2/Pz8cHBwwM3NjfDwcC5dusSxY8d44oknzH6nV69eZcuWLSxatIhVq1bh4uKCg4MD
      fn5+/fcMMGTIEJKTkxk1apTFeoVCwdSpU7l+/TrXrl0zlT/55JMkJCTg4eFhsZ9KpSI4OJiK
      igq7d6uqqiqKiop46qmn8Pb27v3FWKCgoICOjg6ioqLMVsLr169z6tQpnnnmmW6rnEKh4Omn
      n8bV1ZXc3NxuY2o0Gnx9fc3Cu3vl5s2bXLx4kdmzZ1vdKUNDQ3F1daWkpMRUptPpyM7OZubM
      mRZX1oiICIKDg1Gr1RgMBrvtseYvW5SXl/PNN9+wYsWKbtegVCqJjo6mtraWL7/80qwuNzcX
      V1dXnn766W5z9ZsAvL29cXd3t9mmpaUFhUJhttoNHjzYpoMMBgN6vR6lUmla0WwhSRJqtRpv
      b2+mT59u/wXYQKvVkpOTw/Tp07vd5N9++y0Gg4GwsDCLfVUqFRMnTqS0tNQs1m9tbaWuro6B
      Awf2OrSwhqOjI21tbVbrjUajqd1dNBoNN27c4IknnrBoh4uLi2n1ra+359uutv1li5KSEh5+
      +GHGjBljsX7YsGEEBwdTVFSEJElA1z1VWlrKxIkTUalU3fo8MFmgpqYmPv/8cwICAmw+yPwz
      lZWVlJaWMn78eFPYZIvvvvuOwsJCFixYgI+PT19MNnH3YWzRokXdbpKqqip8fHxsxvAhISHU
      1dXR1NRkKmtvb+fmzZu98oUtfHx8CAsLIz8/n4aGhm71kiSRl5eH0Wjkd7/7nam8pqYGJycn
      mzdqYGAgHR0d1NbW2mWLLX9ZQ5IkLl++zNChQ63uYM7OzgQGBlJTU2OKBpqamqirqyMkJMRi
      nwdCAI2NjWzatAmNRkNcXFyPO8VdSkpK2LRpE0FBQSxdurTH9pIkkZ2djZeXF7///e/7ajYA
      9fX15ObmEh4ezogRI7rVazQa3N3dcXKynnBzd3entbXVbAVtaGigqamJgQMH/ix2KhQK1qxZ
      wyOPPML69es5e/as6flOq9Wyc+dOjh49yoYNG8wyQRqNhgEDBth8TnJxcaGjo8OuHaAnf1mj
      ra2N+vr6Hn3p4eGBVqs17XT19fW0tbXh5eVlsf19+1K8Xq9n//795OTk8Pjjj7N582a7Mh3X
      rl0jMTGRH374gejoaNRqNUql0q45U1JS+Prrr9m9e7fF7bC36HQ6Xn/9dUaOHEl8fLzV1czH
      x8dmHG+pPigoiOzsbLMySZKoq6sjLy+PjIwMgoOD2bZtm93ZL6PRSEdHR7cxJUnCy8vLagh5
      L/Zbwl5/2SIgIKDX9a6urlZ3+/uyA1y8eJGYmBiOHTvG+vXree+993q8+SVJIisri5iYGDo6
      Oti3bx/PPfec3Td/dXU1J06cICIiwizD0RcKCwvRaDRERUXZXJXq6+ttPqD3VH8XhULBoEGD
      iImJYe/evVy9epX09HS7bNXr9SQmJtLU1MSePXuYPHkySqUShUKBn58fcXFxvPjii2zfvp0z
      Z878Ivbb6y9baDSaXtff3T0s0e8COH36NGvXrsXV1ZXU1FQWLlzY40rQ2dnJ7t27SU5OZu7c
      uaSkpFh9YWONnJwcAKKiou7Z9p+i0+lQq9WEhoYybtw4q+0CAgJoaWmxmSFpaWnBzc0NPz8/
      u+cPDAxk1qxZFBUVodPpemx/7tw5KisriYmJsbpjzJw5k+HDh3P48GGTvQEBAXR0dKDX662O
      rdfrcXZ2tmm/vf6yxt1VvCdfNjc34+fnZ9qRfHx8cHV1teqjfhVAaWkpSUlJjBgxguTkZIYM
      GdJjH0mSSE9PJzs7mz/96U+sW7eu13n7mpoaCgoKmD17dq9y1bYoKiri+vXrLF682OZqFhgY
      SH19PT/++KPVNpWVlfj7+9v97HMXDw8PdDod7e3tPba9desWQI+xvLe3t9mY/v7+GAwGqqur
      rfarqqpiwIABNgVgr7+soVAoCAoKorq62ixZ8FPa29upqqoy86Wnpyd+fn5UVlZaHrfXltwj
      er2etLQ0vLy8eOONN+yOWy9fvkxWVhZz5sy5p7eNcG85Z1vo9XpycnKYMGECEyZMsNl25MiR
      ODk5UVRUZLFeq9VSUlLC9OnTe5XvlySJ2tpas9XOFu7u7hiNRpsr+d2UsouLi+kmvZuVO336
      tCm1+FP0ej2FhYVMnjzZapzdG3/ZYuLEidy8eZOKigqL9T/88ANXrlxh1qxZpjJ3d3fGjx9P
      SUkJWq22W59+E8D58+cpLy9n5cqVdq38dzl58iROTk69ivd/yr3mnG1RXFzMhQsXWLhwYY82
      DR48mPnz55OVldVtFZUkiSNHjmA0GomIiDCVt7S0cPDgQW7cuGF13PLycgoLC4mIiLBr5xgz
      Zgx+fn7k5ORYfbtfXFxMSUkJkZGRppSyl5cXS5cupbCwkPLy8m59CgoKuHz5ss3FpTf+ssXY
      sWMJCwsjPT292y7Q2dnJX//6V/z9/Zk0aZJZXVRUFAaDgSNHjnQTcb8JoKysDKVSafVNsCVa
      W1upqKhg2LBh93wWprc55+rqahYvXkxcXJzFQ2h6vZ6MjAwee+wxQkNDexxPoVDw7LPP4u/v
      z6ZNmzh//jySJKHT6UhJSUGtVrNmzRqzB3NnZ2eam5tZuXIlCQkJXLhwwXTT6nQ6MjMz2bhx
      I9OmTWPx4sVm8+l0OlavXs2SJUvMwi4fHx82btxIWVkZL730EhUVFWZp0JSUFBISEpg7dy7z
      5s0zG3P27NlMmzaNLVu28Pe//53Ozk7a29v57LPP2LNnD8uXL2f06NEWr7+3/mppaSEuLo55
      8+Z1W+mVSiUvvPACzc3NJCYmcvXqVSRJQqvVsm3bNsrLy3nllVe6LQhDhw4lNjaWrKwsPvro
      I3Q6HZIkUV5e3n9pUKPRiE6ns+vk4t3Tgbdv38ZoNFJaWtpj3t7X17fbobF7yTl/8cUXNDQ0
      8Oyzz1pcWc+cOcOFCxfYvHmz3c8inp6e7Nixg8zMTDZt2mR2GjQ5ObnbA72TkxOvvPIKK1eu
      JCsri7feest0clOpVBIUFER8fDwzZ87sJurS0lKqqqqYP39+t5AkJCSEtLQ0MjIySEhIQKvV
      mk6Djh49mqSkJMaNG9dtTKVSyYYNGzh+/Dh79+41Ow2amJho8TRoX/xliyFDhnDgwAFSU1NZ
      s2aN2WnQvXv3Wn1xOGfOHIYNG8a+ffs4dOhQ/58G/TWg0+lYv349vr6+bNmypU/b9f3AYDDw
      1ltvUVtby/vvv/+znXP6LfNAvAl+UCgtLaWxsZG4uLhf3c0PXdmYixcvEhcXJ25+OxECuIPB
      YOD48eM8//zzVv9TzoPOqVOnmDdvHpMnT77fpvxqECGQQNaIHUAga4QABLJGCEAga4QABLJG
      CEAga4QABLJGCEAga4QABLJGCEAga4QABLJGCEAga4QABLJGCEAga4QABLJGCEAga4QABLJG
      CEAga4QABLJGCEAga4QABLLm/wEw0SoIQeC8FAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      EoBT/bL/L14+OQskXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxN
      AiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXM3RAGST24yNjLCV
      yGFkdhgfnySRMzHSMcbGH5DKmcTjccBma3PLyamFeCGOtkaMxZJ0dh9lbuYRQXI0tLbx8NEM
      vnyUts5WHk4vEPTkad5R2VLqqXduciFeiIMBUGhqbmZ+fp6Oo53EIus0tzSztR6HQCVNLW2s
      rc2R2V7m7kqA964cx7Ks3+sNapqF+1UWrTeoDfm8M20X9WL2BjUtx+rcb10fhm4YjtRpFLM3
      qGmSz+cdDIBtszg3Q2VLF/UVZWyFZ4luR8nYCp50gtj2BjnFR7Cug/PlEIps09dZj1dVsSwL
      27bR9ukFqSoGUIQ3mAI+n8+RoSyleG8sVVMdq3O/dX0YXo/HkTqd6oP6bTRNw+fzOd0a0WT2
      wRhrjZ2cPHmcsakQJwcGKTN3GH24yMkzZzAyCWpqqrHW1p2dWogX4FwAFIWu/kG6vvatCxdq
      n76q4/ULdbsv/TUANDc3Oza1EC9KToMKV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeT
      AAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXkwAIV5MACFeTAAhXK0kAVuYmuX79OnMrUUKh
      MFY+zsSjUCmmFqKgEgTAZj2hc+3qZRLr6yR3thkfn+ZIV0fxpxZiH8XrO/E1iqLu/rNtTD1L
      KgcKSimmFqKgEmwBFKp9Btc//gx/XQPB6kbeuHCamek57OJPLkRBJdkCHD15nqMn975qAOD8
      2epSTC1EQSUJwLN8vTXi3teF1PrBpzi/66QoCrquOzKWbdmcaipzZKxvain3OFZnU6WXN3pq
      91/wBQS9zqzPoE/l2tl2Byr6/440lKPrOoq99+57iQ7aGvF5x1RVZ/fwdF3H6/U6OuZ3oU7L
      slAUBaUIHz5O2esv+7zr8qVuAYrJ6TdVsXwX6vwu1PiiAX0ltgB7JbzKnzCwW+erXiN8d+p8
      FbwS0X6h9O4s8uFvP+GT26MYZvFakn/dN2tMby/z6Y0b3J2YxnrGx0gqlcSybNbXlsnkv16n
      zczw5zyJH7SNuMHWZuxAZ84O++a3bZPhm5+S0L82m22xuR091LiFxJ885O7jCHo2Tnhx9VuX
      SSQSACwuLX7jfwyGP/2MxEG7qZtZtqIpALQPPvjggxcr+SVLRkjVnGawpxE7GyNu+IltraPa
      ORbn5sipZcxN3mc758GvpJm4P8qO4aOmzGT47j0oq6Gy3H+oqxGrc49Rm3s50dmMnYszfPce
      hr8KKxVFC1Sw9iTE3dufsbpt4PNmmXs8R8ry01BTgZWLE4mnSe/kqS2DiclRljdiPJmfxV/b
      Sjwyw8RshKaaMiIrq6zFklh5C7+aZfjuCFp5OY9H7rGte2iqq3JstQKYOwssxDx4vD7UzAZ3
      7k9R1dBIIr6Dlt/hy3uT+KrqqQw406odIBtfZ3Y5Rn1tOdvRNHZ6nbFHi9Q1NrIVmWdxfoHb
      d78klfeST68Tng9DsJaqoJ/89hM2dJtszkfQiDHyYILNaJzwfJiq+iaWHo+xsJmh1msSXl4m
      o+tk8h7s1MqrsQV4UQvTk0xOh0hHV9lMGSxHIsS3ImS8TSixeaq7zqFuLbCwFaer/xx2dIk7
      w8PEMxmmp+cPfR2i4/RrlGdWGR5/xOzDWU6cv8hKaJrN1WVyls3KZpRj/Wd44+IZPDYcGxgk
      n9gGILq+SjSuE4mESe3EqDpyHL+RZ+B8D5HpMMPjj0luLbO0uMzMaobeI/Vsbu7weDrE4MVL
      1HhNMrrJ+MTk4VfkNzyeWiAYyBNajBDd2EAr82EaBpvbUVKpFLaeYOJR2NlJFZUTvR3Mzi+D
      ESe0bnK+r4np8Aqh+QW6T5/l9MBZXh/qQ8XD0NApotsxAEILy1iGzfLyPMmNDVoHBjEyOidO
      tBCZmmAstEpkcZbNyBLrZgWt1SqbW1FmI/HvdgCy2TTpTA7V62P63ufMLm2g+gK0NdcRqKhm
      duwWT5I2QTvL6N3bbOY8tDVUY+Ghvr7m0PNvLs2xsBrFMA2qqnwM3/qcnFKGamf58uZNNhI6
      aj7Bl3cmMLx+gn4f3qcPfdjciNLW0crRej8rUYtAmY9AsAKv34vH66e6IoAvWE1VuYe29na0
      p5uq2nIPtz+/SWRljXjOxutx+EEXdp6k7aeprhmfmUD1l7Gztsh6LANAdHsLPF6K8XgNT2UT
      5flN4nYANbPKrfuPqKgop665jaBPw0ysc3dsGjVQTplPw6NqYOVJ5lSaGhuo0nSSeY1AwEdF
      RQWax4M/WE2FV6Oyph6/x0N7R8vum171UmYl+V8RJFy139O5bQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
